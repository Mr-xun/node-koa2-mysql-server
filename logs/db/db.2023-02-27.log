[2023-02-27T08:22:29.248] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T08:22:29.250] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T08:22:29.282] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T08:22:29.283] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T08:22:29.285] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T08:22:29.287] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T08:22:29.289] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T08:22:29.290] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T08:22:29.291] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T08:22:29.292] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T08:22:29.293] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T08:22:29.294] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T08:22:29.295] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T08:22:29.296] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T08:22:29.299] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T08:22:29.300] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T08:22:29.301] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T13:19:27.338] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2023-02-27T13:19:27.378] [INFO] db - [
  'Executing (default): INSERT INTO `log_logins` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`msg`,`status`,`last_login_time`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'msg',
      'status',      'lastLoginTime',
      'loginTime',   'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'msg',
      'status',      'lastLoginTime',
      'loginTime',   'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_login {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_login,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36',
      'Chrome110.0.0.0',
      'Windows10',
      '登陆成功',
      1,
      '2023-02-24 15:49:29',
      '2023-02-27 13:19:27',
      '2023-02-27 13:19:27'
    ]
  }
]
[2023-02-27T13:19:27.403] [INFO] db - [
  'Executing (46596eb8-4889-491e-8c14-627fedd586d9): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '46596eb8-4889-491e-8c14-627fedd586d9',
      connection: [Connection]
    }
  }
]
[2023-02-27T13:19:27.466] [INFO] db - [
  'Executing (46596eb8-4889-491e-8c14-627fedd586d9): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '46596eb8-4889-491e-8c14-627fedd586d9',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2023-02-27T13:19:27.476] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2023-02-27 13:19:27', '2023-02-27 13:19:27', 1 ]
  }
]
[2023-02-27T13:19:27.485] [INFO] db - [
  'Executing (46596eb8-4889-491e-8c14-627fedd586d9): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '46596eb8-4889-491e-8c14-627fedd586d9',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2023-02-27T13:19:27.514] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:19:27.520] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:19:32.891] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:19:32.900] [INFO] db - [
  "Executing (default): SELECT count(*) AS `count` FROM `log_operations` AS `log_operation` WHERE (`log_operation`.`delete_time` IS NULL AND (`log_operation`.`describe` LIKE '%%' AND `log_operation`.`user_name` LIKE '%%' AND `log_operation`.`real_name` LIKE '%%'));",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`log_operation`.`delete_time` IS NULL AND (`log_operation`.`describe` LIKE '%%' AND `log_operation`.`user_name` LIKE '%%' AND `log_operation`.`real_name` LIKE '%%'))",
    order: null,
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    attributes: [ [Array] ],
    type: 'SELECT'
  }
]
[2023-02-27T13:19:32.901] [INFO] db - [
  "Executing (default): SELECT `id` AS `logId`, `user_id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `ip`, `location`, `ua`, `browser`, `os`, `method`, `params`, `url`, `describe`, `duration`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `log_operations` AS `log_operation` WHERE (`log_operation`.`delete_time` IS NULL AND (`log_operation`.`describe` LIKE '%%' AND `log_operation`.`user_name` LIKE '%%' AND `log_operation`.`real_name` LIKE '%%')) ORDER BY `createTime` DESC LIMIT 0, 10;",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`log_operation`.`delete_time` IS NULL AND (`log_operation`.`describe` LIKE '%%' AND `log_operation`.`user_name` LIKE '%%' AND `log_operation`.`real_name` LIKE '%%'))",
    order: [ [Array] ],
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],    [Array],
      [Array],    [Array],
      'ip',       'location',
      'ua',       'browser',
      'os',       'method',
      'params',   'url',
      'describe', 'duration',
      [Array],    [Array]
    ],
    originalAttributes: [
      'logId',      'userId',
      'userName',   'realName',
      'ip',         'location',
      'ua',         'browser',
      'os',         'method',
      'params',     'url',
      'describe',   'duration',
      'createTime', 'updateTime'
    ],
    tableNames: [ 'log_operations' ],
    type: 'SELECT',
    model: log_operation
  }
]
[2023-02-27T13:19:40.299] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:19:40.309] [INFO] db - [
  "Executing (default): SELECT count(*) AS `count` FROM `log_logins` AS `log_login` WHERE (`log_login`.`delete_time` IS NULL AND (`log_login`.`user_name` LIKE '%%' AND `log_login`.`real_name` LIKE '%%'));",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`log_login`.`delete_time` IS NULL AND (`log_login`.`user_name` LIKE '%%' AND `log_login`.`real_name` LIKE '%%'))",
    order: null,
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    attributes: [ [Array] ],
    type: 'SELECT'
  }
]
[2023-02-27T13:19:40.310] [INFO] db - [
  "Executing (default): SELECT `id` AS `logId`, `user_id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `ip`, `location`, `ua`, `browser`, `os`, `msg`, `status`, `last_login_time` AS `lastLoginTime`, `create_time` AS `loginTime`, `update_time` AS `updateTime` FROM `log_logins` AS `log_login` WHERE (`log_login`.`delete_time` IS NULL AND (`log_login`.`user_name` LIKE '%%' AND `log_login`.`real_name` LIKE '%%')) ORDER BY `loginTime` DESC LIMIT 0, 10;",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`log_login`.`delete_time` IS NULL AND (`log_login`.`user_name` LIKE '%%' AND `log_login`.`real_name` LIKE '%%'))",
    order: [ [Array] ],
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  [Array],
      'ip',     'location',
      'ua',     'browser',
      'os',     'msg',
      'status', [Array],
      [Array],  [Array]
    ],
    originalAttributes: [
      'logId',     'userId',
      'userName',  'realName',
      'ip',        'location',
      'ua',        'browser',
      'os',        'msg',
      'status',    'lastLoginTime',
      'loginTime', 'updateTime'
    ],
    tableNames: [ 'log_logins' ],
    type: 'SELECT',
    model: log_login
  }
]
[2023-02-27T13:19:49.546] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:19:49.552] [INFO] db - [
  "Executing (default): SELECT count(*) AS `count` FROM `basic_enum_types` AS `basic_enum_type` WHERE (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`type_name` LIKE '%%' AND `basic_enum_type`.`type_code` LIKE '%%'));",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`type_name` LIKE '%%' AND `basic_enum_type`.`type_code` LIKE '%%'))",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    type: 'SELECT'
  }
]
[2023-02-27T13:19:49.553] [INFO] db - [
  "Executing (default): SELECT `id` AS `typeId`, `type_code` AS `typeCode`, `type_name` AS `typeName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `basic_enum_types` AS `basic_enum_type` WHERE (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`type_name` LIKE '%%' AND `basic_enum_type`.`type_code` LIKE '%%')) LIMIT 0, 10;",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`type_name` LIKE '%%' AND `basic_enum_type`.`type_code` LIKE '%%'))",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [
      'typeId',
      'typeCode',
      'typeName',
      'remark',
      'createTime',
      'updateTime'
    ],
    tableNames: [ 'basic_enum_types' ],
    type: 'SELECT',
    model: basic_enum_type
  }
]
[2023-02-27T13:19:51.346] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%5' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:19:51.853] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%4' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:19:52.234] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%2' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:19:52.559] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%2' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:19:54.222] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%4' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:19:55.027] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%5' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:19:55.836] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%4' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:19:56.168] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%4' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:19:56.910] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%2' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:01.235] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%4' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:02.277] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%5' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:03.086] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%4' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:03.565] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%5' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:07.791] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%4' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:09.003] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%2' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:11.004] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%4' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:11.442] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%5' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:11.884] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%2' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:18.498] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:18.505] [INFO] db - [
  'Executing (default): SELECT `basic_enum_type`.`id` AS `typeId`, `basic_enum_type`.`type_code` AS `typeCode`, `basic_enum_type`.`type_name` AS `typeName`, `basic_enum_type`.`remark`, `basic_enum_type`.`create_time` AS `createTime`, `basic_enum_type`.`update_time` AS `updateTime`, `basic_enums`.`id` AS `basic_enums.enumId`, `basic_enums`.`enum_code` AS `basic_enums.enumCode`, `basic_enums`.`enum_name` AS `basic_enums.enumName`, `basic_enums`.`shorthand_code` AS `basic_enums.shorthandCode`, `basic_enums`.`create_time` AS `basic_enums.createTime`, `basic_enums`.`update_time` AS `basic_enums.updateTime`, `basic_enums`.`basic_enum_type_type_id` AS `basic_enums.basicEnumTypeTypeId` FROM `basic_enum_types` AS `basic_enum_type` LEFT OUTER JOIN `basic_enums` AS `basic_enums` ON `basic_enum_type`.`id` = `basic_enums`.`basic_enum_type_type_id` AND (`basic_enums`.`delete_time` IS NULL) WHERE (`basic_enum_type`.`delete_time` IS NULL AND `basic_enum_type`.`id` = 2);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: '(`basic_enum_type`.`delete_time` IS NULL AND `basic_enum_type`.`id` = 2)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [
      'typeId',
      'typeCode',
      'typeName',
      'remark',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum_type,
    includeNames: [ 'basic_enums' ],
    includeMap: { basic_enums: [Object] },
    hasSingleAssociation: false,
    hasMultiAssociation: true,
    topModel: basic_enum_type,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [ 'basic_enum_types', 'basic_enums' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:18.508] [INFO] db - [
  'Executing (default): SELECT `id` AS `enumId`, `enum_code` AS `enumCode`, `enum_name` AS `enumName`, `shorthand_code` AS `shorthandCode`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `basic_enum_type_type_id` AS `basicEnumTypeTypeId` FROM `basic_enums` AS `basic_enum` WHERE (`basic_enum`.`delete_time` IS NULL AND `basic_enum`.`id` = 4);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`basic_enum`.`delete_time` IS NULL AND `basic_enum`.`id` = 4)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array], [Array],
      [Array], [Array],
      [Array], [Array],
      [Array]
    ],
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime',
      'basicEnumTypeTypeId'
    ],
    tableNames: [ 'basic_enums' ],
    type: 'SELECT',
    model: basic_enum
  }
]
[2023-02-27T13:20:18.511] [INFO] db - [
  'Executing (default): UPDATE `basic_enums` SET `id`=?,`enum_code`=?,`enum_name`=?,`shorthand_code`=?,`create_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime',
      'update_time',
      'typeId',
      'typeCode',
      'typeName'
    ],
    model: basic_enum,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [
      4,
      '1',
      '男',
      'n',
      '2023-02-23 10:57:23',
      '2023-02-27 13:20:18',
      4
    ]
  }
]
[2023-02-27T13:20:18.528] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`describe`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36',
      'Chrome110.0.0.0',
      'Windows10',
      'PUT',
      '{"enumId":4,"enumCode":"1","enumName":"男","shorthandCode":"n","createTime":"2023-02-23 10:57:23","updateTime":"2023-02-24 13:33:23","typeId":2,"typeCode":"GENDER","typeName":"性别"}',
      '/api/basic/enum/update',
      '枚举字典修改',
      31,
      '2023-02-27 13:20:18',
      '2023-02-27 13:20:18'
    ]
  }
]
[2023-02-27T13:20:18.564] [INFO] db - [
  "Executing (default): SELECT `basic_enum`.`id` AS `enumId`, `basic_enum`.`enum_code` AS `enumCode`, `basic_enum`.`enum_name` AS `enumName`, `basic_enum`.`shorthand_code` AS `shorthandCode`, `basic_enum`.`create_time` AS `createTime`, `basic_enum`.`update_time` AS `updateTime`, `basic_enum_type`.`id` AS `basic_enum_type.typeId`, `basic_enum_type`.`type_code` AS `basic_enum_type.typeCode`, `basic_enum_type`.`type_name` AS `basic_enum_type.typeName` FROM `basic_enums` AS `basic_enum` INNER JOIN `basic_enum_types` AS `basic_enum_type` ON `basic_enum`.`basic_enum_type_type_id` = `basic_enum_type`.`id` AND (`basic_enum_type`.`delete_time` IS NULL AND (`basic_enum_type`.`id` LIKE '%2' AND `basic_enum_type`.`type_code` LIKE '%')) WHERE (`basic_enum`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'enumId',
      'enumCode',
      'enumName',
      'shorthandCode',
      'createTime',
      'updateTime'
    ],
    hasJoin: true,
    model: basic_enum,
    includeNames: [ 'basic_enum_type' ],
    includeMap: { basic_enum_type: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: false,
    topModel: basic_enum,
    topLimit: undefined,
    hasDuplicating: undefined,
    hasRequired: true,
    hasWhere: true,
    hasIncludeWhere: true,
    hasIncludeRequired: true,
    subQuery: false,
    where: '(`basic_enum`.`delete_time` IS NULL)',
    tableNames: [ 'basic_enums', 'basic_enum_types' ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:22.703] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:22.710] [INFO] db - [
  "Executing (default): SELECT count(*) AS `count` FROM `log_logins` AS `log_login` WHERE (`log_login`.`delete_time` IS NULL AND (`log_login`.`user_name` LIKE '%%' AND `log_login`.`real_name` LIKE '%%'));",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`log_login`.`delete_time` IS NULL AND (`log_login`.`user_name` LIKE '%%' AND `log_login`.`real_name` LIKE '%%'))",
    order: null,
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    attributes: [ [Array] ],
    type: 'SELECT'
  }
]
[2023-02-27T13:20:22.713] [INFO] db - [
  "Executing (default): SELECT `id` AS `logId`, `user_id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `ip`, `location`, `ua`, `browser`, `os`, `msg`, `status`, `last_login_time` AS `lastLoginTime`, `create_time` AS `loginTime`, `update_time` AS `updateTime` FROM `log_logins` AS `log_login` WHERE (`log_login`.`delete_time` IS NULL AND (`log_login`.`user_name` LIKE '%%' AND `log_login`.`real_name` LIKE '%%')) ORDER BY `loginTime` DESC LIMIT 0, 10;",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`log_login`.`delete_time` IS NULL AND (`log_login`.`user_name` LIKE '%%' AND `log_login`.`real_name` LIKE '%%'))",
    order: [ [Array] ],
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  [Array],
      'ip',     'location',
      'ua',     'browser',
      'os',     'msg',
      'status', [Array],
      [Array],  [Array]
    ],
    originalAttributes: [
      'logId',     'userId',
      'userName',  'realName',
      'ip',        'location',
      'ua',        'browser',
      'os',        'msg',
      'status',    'lastLoginTime',
      'loginTime', 'updateTime'
    ],
    tableNames: [ 'log_logins' ],
    type: 'SELECT',
    model: log_login
  }
]
[2023-02-27T13:20:23.646] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T13:20:23.652] [INFO] db - [
  "Executing (default): SELECT count(*) AS `count` FROM `log_operations` AS `log_operation` WHERE (`log_operation`.`delete_time` IS NULL AND (`log_operation`.`describe` LIKE '%%' AND `log_operation`.`user_name` LIKE '%%' AND `log_operation`.`real_name` LIKE '%%'));",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`log_operation`.`delete_time` IS NULL AND (`log_operation`.`describe` LIKE '%%' AND `log_operation`.`user_name` LIKE '%%' AND `log_operation`.`real_name` LIKE '%%'))",
    order: null,
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    attributes: [ [Array] ],
    type: 'SELECT'
  }
]
[2023-02-27T13:20:23.654] [INFO] db - [
  "Executing (default): SELECT `id` AS `logId`, `user_id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `ip`, `location`, `ua`, `browser`, `os`, `method`, `params`, `url`, `describe`, `duration`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `log_operations` AS `log_operation` WHERE (`log_operation`.`delete_time` IS NULL AND (`log_operation`.`describe` LIKE '%%' AND `log_operation`.`user_name` LIKE '%%' AND `log_operation`.`real_name` LIKE '%%')) ORDER BY `createTime` DESC LIMIT 0, 10;",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`log_operation`.`delete_time` IS NULL AND (`log_operation`.`describe` LIKE '%%' AND `log_operation`.`user_name` LIKE '%%' AND `log_operation`.`real_name` LIKE '%%'))",
    order: [ [Array] ],
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],    [Array],
      [Array],    [Array],
      'ip',       'location',
      'ua',       'browser',
      'os',       'method',
      'params',   'url',
      'describe', 'duration',
      [Array],    [Array]
    ],
    originalAttributes: [
      'logId',      'userId',
      'userName',   'realName',
      'ip',         'location',
      'ua',         'browser',
      'os',         'method',
      'params',     'url',
      'describe',   'duration',
      'createTime', 'updateTime'
    ],
    tableNames: [ 'log_operations' ],
    type: 'SELECT',
    model: log_operation
  }
]
[2023-02-27T14:24:44.000] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T14:24:44.007] [INFO] db - [
  "Executing (default): SELECT count(*) AS `count` FROM `log_operations` AS `log_operation` WHERE (`log_operation`.`delete_time` IS NULL AND (`log_operation`.`describe` LIKE '%%' AND `log_operation`.`user_name` LIKE '%%' AND `log_operation`.`real_name` LIKE '%%'));",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`log_operation`.`delete_time` IS NULL AND (`log_operation`.`describe` LIKE '%%' AND `log_operation`.`user_name` LIKE '%%' AND `log_operation`.`real_name` LIKE '%%'))",
    order: null,
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    attributes: [ [Array] ],
    type: 'SELECT'
  }
]
[2023-02-27T14:24:44.009] [INFO] db - [
  "Executing (default): SELECT `id` AS `logId`, `user_id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `ip`, `location`, `ua`, `browser`, `os`, `method`, `params`, `url`, `describe`, `duration`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `log_operations` AS `log_operation` WHERE (`log_operation`.`delete_time` IS NULL AND (`log_operation`.`describe` LIKE '%%' AND `log_operation`.`user_name` LIKE '%%' AND `log_operation`.`real_name` LIKE '%%')) ORDER BY `createTime` DESC LIMIT 0, 10;",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`log_operation`.`delete_time` IS NULL AND (`log_operation`.`describe` LIKE '%%' AND `log_operation`.`user_name` LIKE '%%' AND `log_operation`.`real_name` LIKE '%%'))",
    order: [ [Array] ],
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],    [Array],
      [Array],    [Array],
      'ip',       'location',
      'ua',       'browser',
      'os',       'method',
      'params',   'url',
      'describe', 'duration',
      [Array],    [Array]
    ],
    originalAttributes: [
      'logId',      'userId',
      'userName',   'realName',
      'ip',         'location',
      'ua',         'browser',
      'os',         'method',
      'params',     'url',
      'describe',   'duration',
      'createTime', 'updateTime'
    ],
    tableNames: [ 'log_operations' ],
    type: 'SELECT',
    model: log_operation
  }
]
[2023-02-27T17:55:57.369] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T17:55:57.371] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T17:55:57.421] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T17:55:57.422] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T17:55:57.423] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T17:55:57.427] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T17:55:57.447] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T17:55:57.448] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T17:55:57.449] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T17:55:57.450] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T17:55:57.450] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T17:55:57.451] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T17:55:57.452] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T17:55:57.453] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T17:55:57.459] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T17:55:57.460] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T17:55:57.461] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:01:57.372] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      13,
      '2023-02-27 18:01:57',
      '2023-02-27 18:01:57'
    ]
  }
]
[2023-02-27T18:02:27.546] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T18:02:27.547] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:02:27.560] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:02:27.562] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:02:27.563] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:02:27.564] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:02:27.565] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:02:27.566] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:02:27.568] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:02:27.569] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:02:27.571] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:02:27.572] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:02:27.573] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:02:27.574] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:02:27.575] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:02:27.576] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:02:27.577] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:04:48.458] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      18,
      '2023-02-27 18:04:48',
      '2023-02-27 18:04:48'
    ]
  }
]
[2023-02-27T18:05:49.882] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      20,
      '2023-02-27 18:05:49',
      '2023-02-27 18:05:49'
    ]
  }
]
[2023-02-27T18:06:26.253] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      4,
      '2023-02-27 18:06:26',
      '2023-02-27 18:06:26'
    ]
  }
]
[2023-02-27T18:06:48.839] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T18:06:48.841] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:06:48.853] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:06:48.855] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:06:48.855] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:06:48.857] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:06:48.859] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:06:48.861] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:06:48.862] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:06:48.862] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:06:48.863] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:06:48.864] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:06:48.865] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:06:48.866] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:06:48.868] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:06:48.870] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:06:48.871] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:06:50.994] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      17,
      '2023-02-27 18:06:50',
      '2023-02-27 18:06:50'
    ]
  }
]
[2023-02-27T18:08:47.037] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      17,
      '2023-02-27 18:08:47',
      '2023-02-27 18:08:47'
    ]
  }
]
[2023-02-27T18:09:50.881] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      4,
      '2023-02-27 18:09:50',
      '2023-02-27 18:09:50'
    ]
  }
]
[2023-02-27T18:10:15.569] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      4,
      '2023-02-27 18:10:15',
      '2023-02-27 18:10:15'
    ]
  }
]
[2023-02-27T18:13:13.573] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T18:13:13.575] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:13:13.588] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:13:13.589] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:13:13.590] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:13:13.591] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:13:13.596] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:13:13.598] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:13:13.599] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:13:13.600] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:13:13.601] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:13:13.602] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:13:13.604] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:13:13.605] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:13:13.612] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:13:13.613] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:13:13.614] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:13:32.657] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      17,
      '2023-02-27 18:13:32',
      '2023-02-27 18:13:32'
    ]
  }
]
[2023-02-27T18:14:20.131] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      20,
      '2023-02-27 18:14:20',
      '2023-02-27 18:14:20'
    ]
  }
]
[2023-02-27T18:14:44.559] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T18:14:44.561] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:14:44.574] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:14:44.575] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:14:44.576] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:14:44.577] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:14:44.579] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:14:44.580] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:14:44.581] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:14:44.582] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:14:44.583] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:14:44.584] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:14:44.585] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:14:44.586] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:14:44.588] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:14:44.589] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:14:44.590] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:14:46.557] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      17,
      '2023-02-27 18:14:46',
      '2023-02-27 18:14:46'
    ]
  }
]
[2023-02-27T18:15:15.152] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      23,
      '2023-02-27 18:15:15',
      '2023-02-27 18:15:15'
    ]
  }
]
[2023-02-27T18:15:17.295] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      5,
      '2023-02-27 18:15:17',
      '2023-02-27 18:15:17'
    ]
  }
]
[2023-02-27T18:15:22.126] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      4,
      '2023-02-27 18:15:22',
      '2023-02-27 18:15:22'
    ]
  }
]
[2023-02-27T18:15:50.978] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T18:15:50.979] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:15:50.992] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:15:50.993] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:15:50.995] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:15:50.996] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:15:51.000] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:15:51.002] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:15:51.004] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:15:51.005] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:15:51.007] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:15:51.008] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:15:51.009] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:15:51.011] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:15:51.017] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:15:51.018] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:15:51.019] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:15:52.920] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      21,
      '2023-02-27 18:15:52',
      '2023-02-27 18:15:52'
    ]
  }
]
[2023-02-27T18:16:17.096] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T18:16:17.209] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{"menu_name":"系统管理","parent_id":3,"path":"aliqua officia exercitation nulla","component":"nulla et ad sint","perms":"deserunt laborum do","menu_type":0,"order_num":44,"icon":"http://dummyimage.com/100x100"}',
      '/api/basic/enumType/create',
      125,
      '2023-02-27 18:16:17',
      '2023-02-27 18:16:17'
    ]
  }
]
[2023-02-27T18:17:16.520] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      5,
      '2023-02-27 18:17:16',
      '2023-02-27 18:17:16'
    ]
  }
]
[2023-02-27T18:17:22.593] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      6,
      '2023-02-27 18:17:22',
      '2023-02-27 18:17:22'
    ]
  }
]
[2023-02-27T18:17:25.175] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      4,
      '2023-02-27 18:17:25',
      '2023-02-27 18:17:25'
    ]
  }
]
[2023-02-27T18:17:48.223] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      5,
      '2023-02-27 18:17:48',
      '2023-02-27 18:17:48'
    ]
  }
]
[2023-02-27T18:18:07.404] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{}',
      '/api/storage/file/upload',
      5,
      '2023-02-27 18:18:07',
      '2023-02-27 18:18:07'
    ]
  }
]
[2023-02-27T18:20:00.587] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T18:20:00.589] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:20:00.601] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:20:00.602] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:20:00.603] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:20:00.605] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:20:00.606] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:20:00.608] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:20:00.610] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:20:00.611] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:20:00.612] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:20:00.613] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:20:00.614] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:20:00.615] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:20:00.617] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:20:00.618] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:20:00.619] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:21:48.288] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T18:21:48.290] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:21:48.304] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:21:48.305] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:21:48.305] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:21:48.307] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:21:48.308] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:21:48.309] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:21:48.310] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:21:48.311] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:21:48.311] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:21:48.312] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:21:48.313] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:21:48.314] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:21:48.316] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:21:48.318] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:21:48.319] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:22:46.289] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T18:22:46.291] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:22:46.304] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:22:46.305] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:22:46.306] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:22:46.307] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:22:46.309] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:22:46.310] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:22:46.311] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:22:46.312] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:22:46.314] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:22:46.315] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:22:46.318] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:22:46.319] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:22:46.323] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:22:46.325] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:22:46.327] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:22:49.023] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{"fileName":"测试"}',
      '/api/storage/file/upload',
      34,
      '2023-02-27 18:22:49',
      '2023-02-27 18:22:49'
    ]
  }
]
[2023-02-27T18:23:25.272] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{"fileName":"测试"}',
      '/api/storage/file/upload',
      33,
      '2023-02-27 18:23:25',
      '2023-02-27 18:23:25'
    ]
  }
]
[2023-02-27T18:24:17.472] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T18:24:17.474] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:17.486] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:17.486] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:17.488] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:17.489] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:17.491] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:17.492] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:17.493] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:17.494] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:17.495] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:17.496] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:17.497] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:17.499] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:17.501] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:17.502] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:17.503] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:21.637] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{"fileName":"测试"}',
      '/api/storage/file/upload',
      34,
      '2023-02-27 18:24:21',
      '2023-02-27 18:24:21'
    ]
  }
]
[2023-02-27T18:24:44.070] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T18:24:44.071] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:44.084] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:44.086] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:44.088] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:44.089] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:44.090] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:44.091] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:44.092] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:24:44.093] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:44.094] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:44.095] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:44.096] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:44.096] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:44.098] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:44.099] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:24:44.100] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:25:11.586] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T18:25:11.587] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:25:11.600] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:25:11.601] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:25:11.602] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:25:11.604] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:25:11.605] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:25:11.606] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:25:11.607] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:25:11.608] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:25:11.609] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:25:11.610] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:25:11.610] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:25:11.611] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:25:11.613] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:25:11.614] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:25:11.615] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:32.160] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T18:26:32.163] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:32.176] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:32.178] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:32.179] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:32.181] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:32.182] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:32.184] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:32.185] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:32.187] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:32.188] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:32.189] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:32.190] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:32.191] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:32.193] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:32.193] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:32.194] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:34.232] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2023-02-27T18:26:34.281] [INFO] db - [
  'Executing (default): INSERT INTO `log_operations` (`id`,`user_id`,`user_name`,`real_name`,`ua`,`browser`,`os`,`method`,`params`,`url`,`duration`,`create_time`,`update_time`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    validate: true,
    fields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    defaultFields: [
      'logId',       'userId',
      'userName',    'realName',
      'ip',          'location',
      'ua',          'browser',
      'os',          'method',
      'params',      'url',
      'describe',    'duration',
      'createTime',  'updateTime',
      'create_time', 'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: log_operation {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: log_operation,
    bind: [
      1,
      'xunxiao',
      '荀潇1',
      'apifox/1.0.0 (https://www.apifox.cn)',
      '',
      '',
      'POST',
      '{"menu_name":"系统管理","parent_id":3,"path":"aliqua officia exercitation nulla","component":"nulla et ad sint","perms":"deserunt laborum do","menu_type":0,"order_num":44,"icon":"http://dummyimage.com/100x100"}',
      '/api/basic/enum/create',
      55,
      '2023-02-27 18:26:34',
      '2023-02-27 18:26:34'
    ]
  }
]
[2023-02-27T18:26:50.221] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2023-02-27T18:26:50.222] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_logins' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:50.234] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'log_operations' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:50.235] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:50.236] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:50.238] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:50.239] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:50.240] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:50.241] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2023-02-27T18:26:50.242] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_logins`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_logins', singular: 'log_login' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:50.243] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `log_operations`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'log_operations', singular: 'log_operation' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:50.244] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:50.245] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统用户表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:50.246] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '系统菜单表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:50.248] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:50.249] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2023-02-27T18:26:50.252] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
