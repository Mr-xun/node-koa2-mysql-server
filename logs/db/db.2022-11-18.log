[2022-11-18T08:39:42.479] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T08:39:42.484] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:39:42.516] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:39:42.518] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:39:42.519] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:39:42.519] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:39:42.521] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:39:42.522] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:39:42.523] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:39:42.524] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:39:42.525] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:39:42.526] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:39:42.527] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:39:42.528] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:39:42.529] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:39:42.530] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:39:42.531] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:39:42.532] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:39:42.533] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:40:12.865] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T08:40:53.514] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T08:40:56.009] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T08:40:56.012] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id`, `system_users`.`id` AS `system_users.userId`, `system_users`.`id` AS `system_users.id`, `system_users->system_user_role`.`id` AS `system_users.system_user_role.id`, `system_users->system_user_role`.`user_id` AS `system_users.system_user_role.userId`, `system_users->system_user_role`.`role_id` AS `system_users.system_user_role.roleId`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.createTime`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.updateTime`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.create_time`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.update_time`, `system_users->system_user_role`.`delete_time` AS `system_users.system_user_role.delete_time` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus',
      'system_users',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T08:40:56.015] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T08:41:28.815] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T08:41:28.816] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T08:41:28.817] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T08:41:28.818] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T08:43:22.146] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T08:43:22.148] [INFO] db - [
  'Executing (498b1013-ebf6-4b75-bd45-144e8e3472f2): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '498b1013-ebf6-4b75-bd45-144e8e3472f2',
      connection: [Connection]
    }
  }
]
[2022-11-18T08:43:22.168] [INFO] db - [
  'Executing (498b1013-ebf6-4b75-bd45-144e8e3472f2): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '498b1013-ebf6-4b75-bd45-144e8e3472f2',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T08:43:22.179] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 08:43:22', '2022-11-18 08:43:22', 1 ]
  }
]
[2022-11-18T08:43:22.187] [INFO] db - [
  'Executing (498b1013-ebf6-4b75-bd45-144e8e3472f2): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '498b1013-ebf6-4b75-bd45-144e8e3472f2',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T08:43:22.769] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T08:53:05.023] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T08:53:10.737] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T08:53:22.265] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T08:57:02.904] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T08:57:02.906] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:02.920] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:02.922] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:02.923] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:02.924] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:02.925] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:02.927] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:02.928] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:02.929] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:02.930] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:02.931] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:02.932] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:02.933] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:02.934] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:02.937] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:02.938] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:02.938] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:02.939] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:17.948] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T08:57:17.950] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:17.962] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:17.963] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:17.964] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:17.965] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:17.967] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:17.968] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:17.969] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:17.970] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:17.971] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:17.972] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:17.973] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:17.973] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:17.974] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:17.976] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:17.976] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:17.977] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:17.978] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:23.823] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T08:57:23.826] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:23.838] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:23.839] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:23.840] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:23.841] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:23.842] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:23.844] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:23.845] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:23.845] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:57:23.846] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:23.847] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:23.848] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:23.849] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:23.849] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:23.851] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:23.852] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:23.853] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:57:23.854] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:58:33.118] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T08:58:33.119] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:58:33.132] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:58:33.132] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:58:33.134] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:58:33.135] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:58:33.136] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:58:33.138] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:58:33.139] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:58:33.140] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:58:33.141] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:58:33.141] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:58:33.142] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:58:33.143] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:58:33.144] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:58:33.145] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:58:33.146] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:58:33.147] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:58:33.148] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:09.768] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T08:59:09.769] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:09.782] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:09.783] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:09.784] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:09.785] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:09.787] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:09.789] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:09.790] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:09.791] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:09.791] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:09.792] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:09.793] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:09.794] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:09.794] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:09.796] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:09.797] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:09.798] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:09.799] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:18.318] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T08:59:18.320] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:18.332] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:18.333] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:18.334] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:18.334] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:18.336] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:18.338] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:18.338] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:18.339] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:18.340] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:18.341] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:18.342] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:18.342] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:18.343] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:18.345] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:18.346] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:18.346] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:18.347] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:50.761] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T08:59:50.763] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:50.777] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:50.779] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:50.779] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:50.780] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:50.781] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:50.781] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:50.782] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:50.783] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T08:59:50.784] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:50.785] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:50.785] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:50.786] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:50.787] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:50.789] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:50.790] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:50.791] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T08:59:50.791] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:01.872] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:00:01.875] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:01.888] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:01.888] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:01.889] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:01.890] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:01.891] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:01.892] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:01.893] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:01.894] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:01.894] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:01.895] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:01.896] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:01.897] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:01.897] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:01.899] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:01.900] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:01.901] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:01.901] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:28.633] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:00:28.634] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:28.647] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:28.648] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:28.649] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:28.650] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:28.652] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:28.653] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:28.654] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:28.655] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:28.655] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:28.656] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:28.657] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:28.658] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:28.658] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:28.660] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:28.661] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:28.662] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:28.663] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:41.324] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:00:41.328] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:41.341] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:41.342] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:41.343] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:41.344] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:41.345] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:41.347] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:41.347] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:41.348] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:00:41.349] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:41.350] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:41.351] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:41.351] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:41.352] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:41.354] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:41.355] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:41.355] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:41.356] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:00:50.005] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:00:50.008] [INFO] db - [
  'Executing (3c40ba6b-ca2d-4598-aacb-8cfbf592c18c): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '3c40ba6b-ca2d-4598-aacb-8cfbf592c18c',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:00:50.014] [INFO] db - [
  'Executing (3c40ba6b-ca2d-4598-aacb-8cfbf592c18c): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '3c40ba6b-ca2d-4598-aacb-8cfbf592c18c',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:00:50.022] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 09:00:50', '2022-11-18 09:00:50', 1 ]
  }
]
[2022-11-18T09:00:50.030] [INFO] db - [
  'Executing (3c40ba6b-ca2d-4598-aacb-8cfbf592c18c): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '3c40ba6b-ca2d-4598-aacb-8cfbf592c18c',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:01:40.602] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:01:40.604] [INFO] db - [
  'Executing (6b5c762a-8ed2-47a0-a633-a5e785b09843): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '6b5c762a-8ed2-47a0-a633-a5e785b09843',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:01:40.605] [INFO] db - [
  'Executing (6b5c762a-8ed2-47a0-a633-a5e785b09843): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '6b5c762a-8ed2-47a0-a633-a5e785b09843',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:01:40.612] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 09:01:40', '2022-11-18 09:01:40', 1 ]
  }
]
[2022-11-18T09:01:40.620] [INFO] db - [
  'Executing (6b5c762a-8ed2-47a0-a633-a5e785b09843): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '6b5c762a-8ed2-47a0-a633-a5e785b09843',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:02:46.194] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:02:46.196] [INFO] db - [
  'Executing (c1561e13-547b-4c28-9f2b-c5232d919b71): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'c1561e13-547b-4c28-9f2b-c5232d919b71',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:02:46.198] [INFO] db - [
  'Executing (c1561e13-547b-4c28-9f2b-c5232d919b71): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'c1561e13-547b-4c28-9f2b-c5232d919b71',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:02:46.203] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 09:02:46', '2022-11-18 09:02:46', 1 ]
  }
]
[2022-11-18T09:02:46.210] [INFO] db - [
  'Executing (c1561e13-547b-4c28-9f2b-c5232d919b71): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'c1561e13-547b-4c28-9f2b-c5232d919b71',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:04:11.508] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:04:11.510] [INFO] db - [
  'Executing (dd01383b-ce8e-4491-a217-fa90cbe934cc): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'dd01383b-ce8e-4491-a217-fa90cbe934cc',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:04:11.511] [INFO] db - [
  'Executing (dd01383b-ce8e-4491-a217-fa90cbe934cc): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'dd01383b-ce8e-4491-a217-fa90cbe934cc',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:04:11.518] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 09:04:11', '2022-11-18 09:04:11', 1 ]
  }
]
[2022-11-18T09:04:11.522] [INFO] db - [
  'Executing (dd01383b-ce8e-4491-a217-fa90cbe934cc): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'dd01383b-ce8e-4491-a217-fa90cbe934cc',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:06:19.447] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:06:19.450] [INFO] db - [
  'Executing (fc214e90-c998-42d9-9f19-f84cf142381c): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'fc214e90-c998-42d9-9f19-f84cf142381c',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:06:19.451] [INFO] db - [
  'Executing (fc214e90-c998-42d9-9f19-f84cf142381c): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'fc214e90-c998-42d9-9f19-f84cf142381c',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:06:19.457] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 09:06:19', '2022-11-18 09:06:19', 1 ]
  }
]
[2022-11-18T09:06:19.464] [INFO] db - [
  'Executing (fc214e90-c998-42d9-9f19-f84cf142381c): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'fc214e90-c998-42d9-9f19-f84cf142381c',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:12:48.721] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:12:48.722] [INFO] db - [
  'Executing (e4655774-52d3-42af-b788-305bbfaf89f7): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'e4655774-52d3-42af-b788-305bbfaf89f7',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:12:48.723] [INFO] db - [
  'Executing (e4655774-52d3-42af-b788-305bbfaf89f7): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'e4655774-52d3-42af-b788-305bbfaf89f7',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:12:48.729] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 09:12:48', '2022-11-18 09:12:48', 1 ]
  }
]
[2022-11-18T09:12:48.734] [INFO] db - [
  'Executing (e4655774-52d3-42af-b788-305bbfaf89f7): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'e4655774-52d3-42af-b788-305bbfaf89f7',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:14:21.474] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:14:21.476] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:14:21.488] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:14:21.489] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:14:21.490] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:14:21.491] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:14:21.492] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:14:21.493] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:14:21.494] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:14:21.496] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:14:21.497] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:14:21.498] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:14:21.499] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:14:21.500] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:14:21.502] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:14:21.505] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:14:21.507] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:14:21.508] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:14:21.510] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:15:27.075] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:15:27.077] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:15:27.089] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:15:27.090] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:15:27.091] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:15:27.093] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:15:27.094] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:15:27.095] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:15:27.096] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:15:27.097] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:15:27.097] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:15:27.098] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:15:27.099] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:15:27.100] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:15:27.100] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:15:27.102] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:15:27.103] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:15:27.104] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:15:27.105] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:30:40.498] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:30:40.502] [INFO] db - [
  'Executing (5d26d7fb-1c78-4914-8fcc-c33cc6ef8c33): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '5d26d7fb-1c78-4914-8fcc-c33cc6ef8c33',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:30:40.509] [INFO] db - [
  'Executing (5d26d7fb-1c78-4914-8fcc-c33cc6ef8c33): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '5d26d7fb-1c78-4914-8fcc-c33cc6ef8c33',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:30:40.521] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 09:30:40', '2022-11-18 09:30:40', 1 ]
  }
]
[2022-11-18T09:30:40.528] [INFO] db - [
  'Executing (5d26d7fb-1c78-4914-8fcc-c33cc6ef8c33): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '5d26d7fb-1c78-4914-8fcc-c33cc6ef8c33',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:33:18.097] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:33:18.099] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:18.111] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:18.112] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:18.113] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:18.114] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:18.116] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:18.117] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:18.118] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:18.119] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:18.120] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:18.121] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:18.122] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:18.123] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:18.124] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:18.126] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:18.127] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:18.128] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:18.129] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:23.093] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:33:23.096] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:23.109] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:23.111] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:23.112] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:23.113] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:23.115] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:23.116] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:23.118] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:23.119] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:23.120] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:23.121] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:23.122] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:23.123] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:23.125] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:23.127] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:23.129] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:23.130] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:23.131] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:43.655] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:33:43.656] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:43.668] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:43.670] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:43.672] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:43.672] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:43.674] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:43.675] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:43.676] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:43.677] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:33:43.678] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:43.678] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:43.679] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:43.680] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:43.681] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:43.682] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:43.683] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:43.684] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:33:43.685] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:48.936] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:34:48.938] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:48.951] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:48.952] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:48.953] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:48.954] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:48.955] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:48.956] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:48.957] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:48.958] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:48.959] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:48.961] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:48.962] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:48.963] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:48.964] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:48.966] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:48.967] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:48.968] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:48.968] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:54.399] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:34:54.402] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:54.414] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:54.415] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:54.416] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:54.417] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:54.418] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:54.420] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:54.421] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:54.421] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:34:54.422] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:54.423] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:54.424] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:54.425] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:54.426] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:54.427] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:54.428] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:54.429] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:34:54.430] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:32.501] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:35:32.503] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:32.517] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:32.519] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:32.519] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:32.520] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:32.521] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:32.522] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:32.522] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:32.523] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:32.524] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:32.525] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:32.526] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:32.527] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:32.527] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:32.529] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:32.530] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:32.531] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:32.532] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:47.577] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:35:47.579] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:47.591] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:47.592] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:47.593] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:47.595] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:47.596] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:47.597] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:47.598] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:47.599] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:35:47.600] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:47.601] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:47.601] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:47.602] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:47.603] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:47.605] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:47.606] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:47.607] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:35:47.608] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:04.188] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:36:04.190] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:04.202] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:04.204] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:04.204] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:04.205] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:04.207] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:04.208] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:04.209] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:04.210] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:04.211] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:04.213] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:04.214] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:04.215] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:04.216] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:04.217] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:04.218] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:04.220] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:04.222] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:04.908] [INFO] db - [
  "Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.id`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`gender` = 1 AND `system_user`.`avatar` = '' AND `system_user`.`mobile` = '17810204418' AND `system_user`.`email` = '123@123.com' AND `system_user`.`status` = 1 AND `system_user`.`description` = '' AND `system_user`.`iat` = 1668735040 AND `system_user`.`exp` = 1669339840 AND `system_user`.`id` = 1 AND `system_user`.`user_name` = 'xunxiao' AND `system_user`.`real_name` = '荀潇1' AND `system_user`.`dept_id` IS NULL AND `system_user`.`org_id` = 0 AND `system_user`.`last_login_time` = '2022-11-18 09:12:48' AND `system_user`.`create_time` = '2022-11-09 13:50:16' AND `system_user`.`update_time` = '2022-11-18 09:12:48'));",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`gender` = 1 AND `system_user`.`avatar` = '' AND `system_user`.`mobile` = '17810204418' AND `system_user`.`email` = '123@123.com' AND `system_user`.`status` = 1 AND `system_user`.`description` = '' AND `system_user`.`iat` = 1668735040 AND `system_user`.`exp` = 1669339840 AND `system_user`.`id` = 1 AND `system_user`.`user_name` = 'xunxiao' AND `system_user`.`real_name` = '荀潇1' AND `system_user`.`dept_id` IS NULL AND `system_user`.`org_id` = 0 AND `system_user`.`last_login_time` = '2022-11-18 09:12:48' AND `system_user`.`create_time` = '2022-11-09 13:50:16' AND `system_user`.`update_time` = '2022-11-18 09:12:48'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:36:42.291] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:36:42.293] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:42.306] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:42.307] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:42.309] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:42.310] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:42.311] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:42.312] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:42.314] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:42.315] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:42.316] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:42.317] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:42.318] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:42.319] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:42.320] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:42.322] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:42.323] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:42.325] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:42.326] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:51.128] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:36:51.130] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:51.143] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:51.144] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:51.145] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:51.147] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:51.148] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:51.149] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:51.151] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:51.153] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:36:51.154] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:51.154] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:51.155] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:51.156] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:51.158] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:51.160] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:51.161] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:51.161] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:51.162] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:36:56.022] [INFO] db - [
  "Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.id`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`gender` = 1 AND `system_user`.`avatar` = '' AND `system_user`.`mobile` = '17810204418' AND `system_user`.`email` = '123@123.com' AND `system_user`.`status` = 1 AND `system_user`.`description` = '' AND `system_user`.`iat` = 1668735040 AND `system_user`.`exp` = 1669339840 AND `system_user`.`id` = 1 AND `system_user`.`user_name` = 'xunxiao' AND `system_user`.`real_name` = '荀潇1' AND `system_user`.`dept_id` IS NULL AND `system_user`.`org_id` = 0 AND `system_user`.`last_login_time` = '2022-11-18 09:12:48' AND `system_user`.`create_time` = '2022-11-09 13:50:16' AND `system_user`.`update_time` = '2022-11-18 09:12:48'));",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`gender` = 1 AND `system_user`.`avatar` = '' AND `system_user`.`mobile` = '17810204418' AND `system_user`.`email` = '123@123.com' AND `system_user`.`status` = 1 AND `system_user`.`description` = '' AND `system_user`.`iat` = 1668735040 AND `system_user`.`exp` = 1669339840 AND `system_user`.`id` = 1 AND `system_user`.`user_name` = 'xunxiao' AND `system_user`.`real_name` = '荀潇1' AND `system_user`.`dept_id` IS NULL AND `system_user`.`org_id` = 0 AND `system_user`.`last_login_time` = '2022-11-18 09:12:48' AND `system_user`.`create_time` = '2022-11-09 13:50:16' AND `system_user`.`update_time` = '2022-11-18 09:12:48'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:37:29.616] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:37:29.617] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:37:29.630] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:37:29.631] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:37:29.633] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:37:29.633] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:37:29.635] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:37:29.636] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:37:29.637] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:37:29.638] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:37:29.640] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:37:29.641] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:37:29.642] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:37:29.643] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:37:29.644] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:37:29.645] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:37:29.646] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:37:29.647] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:37:29.650] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:37:40.353] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.id`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:38:01.921] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:38:01.923] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:01.935] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:01.937] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:01.939] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:01.939] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:01.941] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:01.942] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:01.943] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:01.944] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:01.945] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:01.946] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:01.947] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:01.949] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:01.951] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:01.953] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:01.954] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:01.955] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:01.957] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:04.744] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.id`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:38:31.145] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:38:31.147] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:31.160] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:31.161] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:31.162] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:31.164] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:31.166] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:31.168] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:31.169] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:31.170] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:38:31.171] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:31.172] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:31.173] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:31.173] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:31.174] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:31.176] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:31.177] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:31.178] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:31.179] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:38:32.446] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:38:35.642] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:39:06.889] [INFO] db - [
  "Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.id`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 1,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:39:06.893] [INFO] db - [
  'Executing (9242fe84-e934-425c-81f0-d6fecec92ad2): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '9242fe84-e934-425c-81f0-d6fecec92ad2',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:39:06.898] [INFO] db - [
  'Executing (9242fe84-e934-425c-81f0-d6fecec92ad2): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '9242fe84-e934-425c-81f0-d6fecec92ad2',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:39:06.910] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 09:39:06', '2022-11-18 09:39:06', 1 ]
  }
]
[2022-11-18T09:39:06.918] [INFO] db - [
  'Executing (9242fe84-e934-425c-81f0-d6fecec92ad2): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '9242fe84-e934-425c-81f0-d6fecec92ad2',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:39:06.938] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:40:09.896] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T09:43:18.587] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T09:43:18.589] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T09:43:18.591] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:43:18.595] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:43:31.156] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T09:43:31.163] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:43:31.165] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id`, `system_users`.`id` AS `system_users.userId`, `system_users`.`id` AS `system_users.id`, `system_users->system_user_role`.`id` AS `system_users.system_user_role.id`, `system_users->system_user_role`.`user_id` AS `system_users.system_user_role.userId`, `system_users->system_user_role`.`role_id` AS `system_users.system_user_role.roleId`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.createTime`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.updateTime`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.create_time`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.update_time`, `system_users->system_user_role`.`delete_time` AS `system_users.system_user_role.delete_time` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus',
      'system_users',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:43:45.551] [INFO] db - [
  "Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` = '管理员') LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` = '管理员')",
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T09:43:45.553] [INFO] db - [
  'Executing (26311cf2-4068-439a-b664-b713d1c381e5): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '26311cf2-4068-439a-b664-b713d1c381e5',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:43:45.557] [INFO] db - [
  'Executing (26311cf2-4068-439a-b664-b713d1c381e5): INSERT INTO `system_roles` (`id`,`role_name`,`remark`,`create_time`,`update_time`) VALUES (?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '26311cf2-4068-439a-b664-b713d1c381e5',
      connection: [Connection]
    },
    hooks: true,
    validate: true,
    fields: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    defaultFields: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: system_role {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: system_role,
    bind: [ '', '管理员', '管理员', '2022-11-18 09:43:45', '2022-11-18 09:43:45' ]
  }
]
[2022-11-18T09:43:45.560] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (1, 2, 195, 407, 294, 295, 296, 297, 333, 298, 536, 183));',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (1, 2, 195, 407, 294, 295, 296, 297, 333, 298, 536, 183))',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'menuId',      'menuName',
      'parentId',    'path',
      'component',   'perms',
      'type',        'orderNum',
      'icon',        'createTime',
      'updateTime',  'create_time',
      'update_time', 'delete_time'
    ],
    attributes: [
      [Array],       [Array],
      [Array],       'path',
      'component',   'perms',
      'type',        [Array],
      'icon',        [Array],
      [Array],       'create_time',
      'update_time', 'delete_time'
    ],
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T09:43:45.563] [INFO] db - [
  'Executing (26311cf2-4068-439a-b664-b713d1c381e5): SELECT `id`, `role_id` AS `roleId`, `menu_id` AS `menuId`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_role_menus` AS `system_role_menu` WHERE (`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 46);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '26311cf2-4068-439a-b664-b713d1c381e5',
      connection: [Connection]
    },
    where: '(`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 46)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      'id',
      [Array],
      [Array],
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_role_menus' ],
    type: 'SELECT',
    model: system_role_menu
  }
]
[2022-11-18T09:43:45.717] [INFO] db - [
  "Executing (26311cf2-4068-439a-b664-b713d1c381e5): INSERT INTO `system_role_menus` (`id`,`role_id`,`menu_id`,`create_time`,`update_time`) VALUES (NULL,46,1,'2022-11-18 09:43:45','2022-11-18 09:43:45'),(NULL,46,2,'2022-11-18 09:43:45','2022-11-18 09:43:45'),(NULL,46,183,'2022-11-18 09:43:45','2022-11-18 09:43:45'),(NULL,46,195,'2022-11-18 09:43:45','2022-11-18 09:43:45'),(NULL,46,294,'2022-11-18 09:43:45','2022-11-18 09:43:45'),(NULL,46,295,'2022-11-18 09:43:45','2022-11-18 09:43:45'),(NULL,46,296,'2022-11-18 09:43:45','2022-11-18 09:43:45'),(NULL,46,297,'2022-11-18 09:43:45','2022-11-18 09:43:45'),(NULL,46,298,'2022-11-18 09:43:45','2022-11-18 09:43:45'),(NULL,46,333,'2022-11-18 09:43:45','2022-11-18 09:43:45'),(NULL,46,407,'2022-11-18 09:43:45','2022-11-18 09:43:45'),(NULL,46,536,'2022-11-18 09:43:45','2022-11-18 09:43:45');",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    validate: true,
    hooks: true,
    individualHooks: false,
    ignoreDuplicates: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '26311cf2-4068-439a-b664-b713d1c381e5',
      connection: [Connection]
    },
    model: system_role_menu,
    returning: true,
    fields: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    type: 'INSERT'
  }
]
[2022-11-18T09:43:45.719] [INFO] db - [
  'Executing (26311cf2-4068-439a-b664-b713d1c381e5): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '26311cf2-4068-439a-b664-b713d1c381e5',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:43:45.756] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:43:45.758] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id`, `system_users`.`id` AS `system_users.userId`, `system_users`.`id` AS `system_users.id`, `system_users->system_user_role`.`id` AS `system_users.system_user_role.id`, `system_users->system_user_role`.`user_id` AS `system_users.system_user_role.userId`, `system_users->system_user_role`.`role_id` AS `system_users.system_user_role.roleId`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.createTime`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.updateTime`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.create_time`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.update_time`, `system_users->system_user_role`.`delete_time` AS `system_users.system_user_role.delete_time` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus',
      'system_users',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:44:01.215] [INFO] db - [
  "Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` = '角色2') LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` = '角色2')",
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T09:44:01.217] [INFO] db - [
  'Executing (ff844940-62f1-4bfd-becf-f8c908a72f61): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'ff844940-62f1-4bfd-becf-f8c908a72f61',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:44:01.219] [INFO] db - [
  'Executing (ff844940-62f1-4bfd-becf-f8c908a72f61): INSERT INTO `system_roles` (`id`,`role_name`,`remark`,`create_time`,`update_time`) VALUES (?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'ff844940-62f1-4bfd-becf-f8c908a72f61',
      connection: [Connection]
    },
    hooks: true,
    validate: true,
    fields: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    defaultFields: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: system_role {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: system_role,
    bind: [ '', '角色2', '角色2', '2022-11-18 09:44:01', '2022-11-18 09:44:01' ]
  }
]
[2022-11-18T09:44:01.223] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (1, 2));',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (1, 2))',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'menuId',      'menuName',
      'parentId',    'path',
      'component',   'perms',
      'type',        'orderNum',
      'icon',        'createTime',
      'updateTime',  'create_time',
      'update_time', 'delete_time'
    ],
    attributes: [
      [Array],       [Array],
      [Array],       'path',
      'component',   'perms',
      'type',        [Array],
      'icon',        [Array],
      [Array],       'create_time',
      'update_time', 'delete_time'
    ],
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T09:44:01.225] [INFO] db - [
  'Executing (ff844940-62f1-4bfd-becf-f8c908a72f61): SELECT `id`, `role_id` AS `roleId`, `menu_id` AS `menuId`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_role_menus` AS `system_role_menu` WHERE (`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 47);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'ff844940-62f1-4bfd-becf-f8c908a72f61',
      connection: [Connection]
    },
    where: '(`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 47)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      'id',
      [Array],
      [Array],
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_role_menus' ],
    type: 'SELECT',
    model: system_role_menu
  }
]
[2022-11-18T09:44:01.227] [INFO] db - [
  "Executing (ff844940-62f1-4bfd-becf-f8c908a72f61): INSERT INTO `system_role_menus` (`id`,`role_id`,`menu_id`,`create_time`,`update_time`) VALUES (NULL,47,1,'2022-11-18 09:44:01','2022-11-18 09:44:01'),(NULL,47,2,'2022-11-18 09:44:01','2022-11-18 09:44:01');",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    validate: true,
    hooks: true,
    individualHooks: false,
    ignoreDuplicates: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'ff844940-62f1-4bfd-becf-f8c908a72f61',
      connection: [Connection]
    },
    model: system_role_menu,
    returning: true,
    fields: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    type: 'INSERT'
  }
]
[2022-11-18T09:44:01.229] [INFO] db - [
  'Executing (ff844940-62f1-4bfd-becf-f8c908a72f61): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'ff844940-62f1-4bfd-becf-f8c908a72f61',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:44:01.260] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:44:01.261] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id`, `system_users`.`id` AS `system_users.userId`, `system_users`.`id` AS `system_users.id`, `system_users->system_user_role`.`id` AS `system_users.system_user_role.id`, `system_users->system_user_role`.`user_id` AS `system_users.system_user_role.userId`, `system_users->system_user_role`.`role_id` AS `system_users.system_user_role.roleId`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.createTime`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.updateTime`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.create_time`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.update_time`, `system_users->system_user_role`.`delete_time` AS `system_users.system_user_role.delete_time` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus',
      'system_users',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:44:11.019] [INFO] db - [
  "Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` = '角色3') LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` = '角色3')",
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T09:44:11.020] [INFO] db - [
  'Executing (275b1d6a-180f-4eed-9ce7-b89c47a847da): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '275b1d6a-180f-4eed-9ce7-b89c47a847da',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:44:11.021] [INFO] db - [
  'Executing (275b1d6a-180f-4eed-9ce7-b89c47a847da): INSERT INTO `system_roles` (`id`,`role_name`,`remark`,`create_time`,`update_time`) VALUES (?,?,?,?,?);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '275b1d6a-180f-4eed-9ce7-b89c47a847da',
      connection: [Connection]
    },
    hooks: true,
    validate: true,
    fields: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    defaultFields: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    returning: true,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    type: 'INSERT',
    instance: system_role {
      dataValues: [Object],
      _previousDataValues: [Object],
      uniqno: 1,
      _changed: [Set],
      _options: [Object],
      isNewRecord: true
    },
    model: system_role,
    bind: [ '', '角色3', '角色3', '2022-11-18 09:44:11', '2022-11-18 09:44:11' ]
  }
]
[2022-11-18T09:44:11.024] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (298, 536));',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (298, 536))',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'menuId',      'menuName',
      'parentId',    'path',
      'component',   'perms',
      'type',        'orderNum',
      'icon',        'createTime',
      'updateTime',  'create_time',
      'update_time', 'delete_time'
    ],
    attributes: [
      [Array],       [Array],
      [Array],       'path',
      'component',   'perms',
      'type',        [Array],
      'icon',        [Array],
      [Array],       'create_time',
      'update_time', 'delete_time'
    ],
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T09:44:11.025] [INFO] db - [
  'Executing (275b1d6a-180f-4eed-9ce7-b89c47a847da): SELECT `id`, `role_id` AS `roleId`, `menu_id` AS `menuId`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_role_menus` AS `system_role_menu` WHERE (`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 48);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '275b1d6a-180f-4eed-9ce7-b89c47a847da',
      connection: [Connection]
    },
    where: '(`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 48)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      'id',
      [Array],
      [Array],
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_role_menus' ],
    type: 'SELECT',
    model: system_role_menu
  }
]
[2022-11-18T09:44:11.027] [INFO] db - [
  "Executing (275b1d6a-180f-4eed-9ce7-b89c47a847da): INSERT INTO `system_role_menus` (`id`,`role_id`,`menu_id`,`create_time`,`update_time`) VALUES (NULL,48,298,'2022-11-18 09:44:11','2022-11-18 09:44:11'),(NULL,48,536,'2022-11-18 09:44:11','2022-11-18 09:44:11');",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    validate: true,
    hooks: true,
    individualHooks: false,
    ignoreDuplicates: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '275b1d6a-180f-4eed-9ce7-b89c47a847da',
      connection: [Connection]
    },
    model: system_role_menu,
    returning: true,
    fields: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    type: 'INSERT'
  }
]
[2022-11-18T09:44:11.029] [INFO] db - [
  'Executing (275b1d6a-180f-4eed-9ce7-b89c47a847da): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '275b1d6a-180f-4eed-9ce7-b89c47a847da',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:44:11.059] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:44:11.061] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id`, `system_users`.`id` AS `system_users.userId`, `system_users`.`id` AS `system_users.id`, `system_users->system_user_role`.`id` AS `system_users.system_user_role.id`, `system_users->system_user_role`.`user_id` AS `system_users.system_user_role.userId`, `system_users->system_user_role`.`role_id` AS `system_users.system_user_role.roleId`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.createTime`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.updateTime`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.create_time`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.update_time`, `system_users->system_user_role`.`delete_time` AS `system_users.system_user_role.delete_time` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus',
      'system_users',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:44:12.815] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T09:44:12.818] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T09:44:12.822] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:44:12.827] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:44:17.610] [INFO] db - [
  'Executing (a1f596d9-62e6-4c99-b090-5894e6aba218): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'a1f596d9-62e6-4c99-b090-5894e6aba218',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:44:17.611] [INFO] db - [
  'Executing (a1f596d9-62e6-4c99-b090-5894e6aba218): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'a1f596d9-62e6-4c99-b090-5894e6aba218',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:44:17.615] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`user_name`=?,`real_name`=?,`gender`=?,`avatar`=?,`mobile`=?,`email`=?,`dept_id`=?,`org_id`=?,`status`=?,`description`=?,`last_login_time`=?,`create_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime',
      'update_time', 'roleIds'
    ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [
      1,                     'xunxiao',
      '荀潇1',               1,
      '',                    '17810204418',
      '123@123.com',         null,
      0,                     1,
      '',                    '2022-11-18 09:39:06',
      '2022-11-09 13:50:16', '2022-11-18 09:44:17',
      1
    ]
  }
]
[2022-11-18T09:44:17.622] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`id` IN (46, 47, 48));',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`system_role`.`delete_time` IS NULL AND `system_role`.`id` IN (46, 47, 48))',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      [Array],
      [Array],
      'remark',
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T09:44:17.624] [INFO] db - [
  'Executing (a1f596d9-62e6-4c99-b090-5894e6aba218): SELECT `id`, `user_id` AS `userId`, `role_id` AS `roleId`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_user_roles` AS `system_user_role` WHERE (`system_user_role`.`delete_time` IS NULL AND `system_user_role`.`user_id` = 1);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'a1f596d9-62e6-4c99-b090-5894e6aba218',
      connection: [Connection]
    },
    where: '(`system_user_role`.`delete_time` IS NULL AND `system_user_role`.`user_id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'id',
      'userId',
      'roleId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      'id',
      [Array],
      [Array],
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_user_roles' ],
    type: 'SELECT',
    model: system_user_role
  }
]
[2022-11-18T09:44:17.627] [INFO] db - [
  "Executing (a1f596d9-62e6-4c99-b090-5894e6aba218): INSERT INTO `system_user_roles` (`id`,`user_id`,`role_id`,`create_time`,`update_time`) VALUES (NULL,1,46,'2022-11-18 09:44:17','2022-11-18 09:44:17'),(NULL,1,47,'2022-11-18 09:44:17','2022-11-18 09:44:17'),(NULL,1,48,'2022-11-18 09:44:17','2022-11-18 09:44:17');",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    validate: true,
    hooks: true,
    individualHooks: false,
    ignoreDuplicates: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'a1f596d9-62e6-4c99-b090-5894e6aba218',
      connection: [Connection]
    },
    model: system_user_role,
    returning: true,
    fields: [
      'id',
      'userId',
      'roleId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    type: 'INSERT'
  }
]
[2022-11-18T09:44:17.628] [INFO] db - [
  'Executing (a1f596d9-62e6-4c99-b090-5894e6aba218): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'a1f596d9-62e6-4c99-b090-5894e6aba218',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:44:17.669] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:44:17.671] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:44:23.334] [INFO] db - [
  'Executing (31bc1bd6-766b-4d7b-a984-eca76d6c6797): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '31bc1bd6-766b-4d7b-a984-eca76d6c6797',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:44:23.335] [INFO] db - [
  'Executing (31bc1bd6-766b-4d7b-a984-eca76d6c6797): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 12);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '31bc1bd6-766b-4d7b-a984-eca76d6c6797',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 12)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:44:23.338] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`user_name`=?,`real_name`=?,`gender`=?,`avatar`=?,`mobile`=?,`email`=?,`dept_id`=?,`org_id`=?,`status`=?,`description`=?,`last_login_time`=?,`create_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime',
      'update_time', 'roleIds'
    ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [
      12,
      'xunxiao2',
      '荀潇2',
      1,
      '',
      '',
      '',
      0,
      0,
      1,
      '',
      null,
      '2022-11-17 17:05:39',
      '2022-11-18 09:44:23',
      12
    ]
  }
]
[2022-11-18T09:44:23.346] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`id` IN (47, 48));',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`system_role`.`delete_time` IS NULL AND `system_role`.`id` IN (47, 48))',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      [Array],
      [Array],
      'remark',
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T09:44:23.348] [INFO] db - [
  'Executing (31bc1bd6-766b-4d7b-a984-eca76d6c6797): SELECT `id`, `user_id` AS `userId`, `role_id` AS `roleId`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_user_roles` AS `system_user_role` WHERE (`system_user_role`.`delete_time` IS NULL AND `system_user_role`.`user_id` = 12);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '31bc1bd6-766b-4d7b-a984-eca76d6c6797',
      connection: [Connection]
    },
    where: '(`system_user_role`.`delete_time` IS NULL AND `system_user_role`.`user_id` = 12)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'id',
      'userId',
      'roleId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      'id',
      [Array],
      [Array],
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_user_roles' ],
    type: 'SELECT',
    model: system_user_role
  }
]
[2022-11-18T09:44:23.350] [INFO] db - [
  "Executing (31bc1bd6-766b-4d7b-a984-eca76d6c6797): INSERT INTO `system_user_roles` (`id`,`user_id`,`role_id`,`create_time`,`update_time`) VALUES (NULL,12,47,'2022-11-18 09:44:23','2022-11-18 09:44:23'),(NULL,12,48,'2022-11-18 09:44:23','2022-11-18 09:44:23');",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    validate: true,
    hooks: true,
    individualHooks: false,
    ignoreDuplicates: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '31bc1bd6-766b-4d7b-a984-eca76d6c6797',
      connection: [Connection]
    },
    model: system_user_role,
    returning: true,
    fields: [
      'id',
      'userId',
      'roleId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    type: 'INSERT'
  }
]
[2022-11-18T09:44:23.352] [INFO] db - [
  'Executing (31bc1bd6-766b-4d7b-a984-eca76d6c6797): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '31bc1bd6-766b-4d7b-a984-eca76d6c6797',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:44:23.393] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:44:23.395] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:44:30.896] [INFO] db - [
  "Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.id`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 1,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:44:30.899] [INFO] db - [
  'Executing (f910d336-352d-4e57-bfff-f8bb22c6bc59): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'f910d336-352d-4e57-bfff-f8bb22c6bc59',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:44:30.900] [INFO] db - [
  'Executing (f910d336-352d-4e57-bfff-f8bb22c6bc59): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'f910d336-352d-4e57-bfff-f8bb22c6bc59',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:44:30.902] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 09:44:30', '2022-11-18 09:44:30', 1 ]
  }
]
[2022-11-18T09:44:30.910] [INFO] db - [
  'Executing (f910d336-352d-4e57-bfff-f8bb22c6bc59): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'f910d336-352d-4e57-bfff-f8bb22c6bc59',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:44:30.933] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:45:43.469] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T09:49:21.507] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:49:21.509] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:49:21.522] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:49:21.524] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:49:21.525] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:49:21.526] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:49:21.528] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:49:21.530] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:49:21.531] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:49:21.532] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:49:21.533] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:49:21.533] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:49:21.534] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:49:21.535] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:49:21.536] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:49:21.538] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:49:21.539] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:49:21.540] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:49:21.541] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:49:22.238] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles`.`remark` AS `system_roles.remark`, `system_roles`.`create_time` AS `system_roles.createTime`, `system_roles`.`update_time` AS `system_roles.updateTime`, `system_roles`.`create_time` AS `system_roles.create_time`, `system_roles`.`update_time` AS `system_roles.update_time`, `system_roles`.`delete_time` AS `system_roles.delete_time`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:49:28.353] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles`.`remark` AS `system_roles.remark`, `system_roles`.`create_time` AS `system_roles.createTime`, `system_roles`.`update_time` AS `system_roles.updateTime`, `system_roles`.`create_time` AS `system_roles.create_time`, `system_roles`.`update_time` AS `system_roles.update_time`, `system_roles`.`delete_time` AS `system_roles.delete_time`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:49:32.301] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T09:49:36.835] [INFO] db - [
  "Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.id`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 1,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:49:36.839] [INFO] db - [
  'Executing (8d6e5d2a-7072-4c40-8105-1c15310409e3): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '8d6e5d2a-7072-4c40-8105-1c15310409e3',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:49:36.846] [INFO] db - [
  'Executing (8d6e5d2a-7072-4c40-8105-1c15310409e3): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '8d6e5d2a-7072-4c40-8105-1c15310409e3',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:49:36.854] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 09:49:36', '2022-11-18 09:49:36', 1 ]
  }
]
[2022-11-18T09:49:36.863] [INFO] db - [
  'Executing (8d6e5d2a-7072-4c40-8105-1c15310409e3): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '8d6e5d2a-7072-4c40-8105-1c15310409e3',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:49:36.887] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles`.`remark` AS `system_roles.remark`, `system_roles`.`create_time` AS `system_roles.createTime`, `system_roles`.`update_time` AS `system_roles.updateTime`, `system_roles`.`create_time` AS `system_roles.create_time`, `system_roles`.`update_time` AS `system_roles.update_time`, `system_roles`.`delete_time` AS `system_roles.delete_time`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:49:37.116] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T09:51:37.140] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:51:37.142] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:51:37.155] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:51:37.156] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:51:37.157] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:51:37.158] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:51:37.160] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:51:37.161] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:51:37.162] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:51:37.163] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:51:37.164] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:51:37.165] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:51:37.166] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:51:37.168] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:51:37.169] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:51:37.171] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:51:37.173] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:51:37.174] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:51:37.175] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:51:37.682] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles`.`remark` AS `system_roles.remark`, `system_roles`.`create_time` AS `system_roles.createTime`, `system_roles`.`update_time` AS `system_roles.updateTime`, `system_roles`.`create_time` AS `system_roles.create_time`, `system_roles`.`update_time` AS `system_roles.update_time`, `system_roles`.`delete_time` AS `system_roles.delete_time`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:52:04.396] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T09:52:09.636] [INFO] db - [
  "Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.id`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 1,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:52:09.640] [INFO] db - [
  'Executing (14fac532-9f6b-4672-9f08-736131d8cd3a): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '14fac532-9f6b-4672-9f08-736131d8cd3a',
      connection: [Connection]
    }
  }
]
[2022-11-18T09:52:09.645] [INFO] db - [
  'Executing (14fac532-9f6b-4672-9f08-736131d8cd3a): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '14fac532-9f6b-4672-9f08-736131d8cd3a',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T09:52:09.658] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 09:52:09', '2022-11-18 09:52:09', 1 ]
  }
]
[2022-11-18T09:52:09.665] [INFO] db - [
  'Executing (14fac532-9f6b-4672-9f08-736131d8cd3a): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '14fac532-9f6b-4672-9f08-736131d8cd3a',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T09:52:09.694] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles`.`remark` AS `system_roles.remark`, `system_roles`.`create_time` AS `system_roles.createTime`, `system_roles`.`update_time` AS `system_roles.updateTime`, `system_roles`.`create_time` AS `system_roles.create_time`, `system_roles`.`update_time` AS `system_roles.update_time`, `system_roles`.`delete_time` AS `system_roles.delete_time`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:52:09.920] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T09:52:45.067] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles`.`remark` AS `system_roles.remark`, `system_roles`.`create_time` AS `system_roles.createTime`, `system_roles`.`update_time` AS `system_roles.updateTime`, `system_roles`.`create_time` AS `system_roles.create_time`, `system_roles`.`update_time` AS `system_roles.update_time`, `system_roles`.`delete_time` AS `system_roles.delete_time`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:53:00.278] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles`.`remark` AS `system_roles.remark`, `system_roles`.`create_time` AS `system_roles.createTime`, `system_roles`.`update_time` AS `system_roles.updateTime`, `system_roles`.`create_time` AS `system_roles.create_time`, `system_roles`.`update_time` AS `system_roles.update_time`, `system_roles`.`delete_time` AS `system_roles.delete_time`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:53:22.343] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:53:22.344] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:22.357] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:22.359] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:22.360] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:22.361] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:22.364] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:22.366] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:22.368] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:22.368] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:22.369] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:22.370] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:22.371] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:22.372] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:22.374] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:22.376] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:22.378] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:22.380] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:22.382] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:22.536] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles`.`remark` AS `system_roles.remark`, `system_roles`.`create_time` AS `system_roles.createTime`, `system_roles`.`update_time` AS `system_roles.updateTime`, `system_roles`.`create_time` AS `system_roles.create_time`, `system_roles`.`update_time` AS `system_roles.update_time`, `system_roles`.`delete_time` AS `system_roles.delete_time`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:53:49.872] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:53:49.874] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:49.886] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:49.888] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:49.890] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:49.890] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:49.892] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:49.893] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:49.894] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:49.895] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:53:49.896] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:49.897] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:49.898] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:49.899] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:49.900] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:49.902] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:49.904] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:49.905] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:49.907] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:53:50.672] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles`.`remark` AS `system_roles.remark`, `system_roles`.`create_time` AS `system_roles.createTime`, `system_roles`.`update_time` AS `system_roles.updateTime`, `system_roles`.`create_time` AS `system_roles.create_time`, `system_roles`.`update_time` AS `system_roles.update_time`, `system_roles`.`delete_time` AS `system_roles.delete_time`, `system_roles->system_user_role`.`id` AS `system_roles.system_user_role.id`, `system_roles->system_user_role`.`user_id` AS `system_roles.system_user_role.userId`, `system_roles->system_user_role`.`role_id` AS `system_roles.system_user_role.roleId`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.createTime`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.updateTime`, `system_roles->system_user_role`.`create_time` AS `system_roles.system_user_role.create_time`, `system_roles->system_user_role`.`update_time` AS `system_roles.system_user_role.update_time`, `system_roles->system_user_role`.`delete_time` AS `system_roles.system_user_role.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:54:26.922] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:54:26.924] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:26.937] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:26.938] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:26.939] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:26.940] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:26.941] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:26.943] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:26.944] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:26.945] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:26.947] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:26.950] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:26.952] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:26.953] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:26.955] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:26.958] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:26.960] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:26.964] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:26.966] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:27.400] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:54:43.444] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:54:43.446] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:43.459] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:43.461] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:43.462] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:43.463] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:43.465] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:43.466] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:43.468] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:43.469] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:54:43.470] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:43.471] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:43.472] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:43.473] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:43.474] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:43.478] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:43.479] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:43.480] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:43.481] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:54:43.605] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:58:01.899] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:58:01.901] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:01.914] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:01.916] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:01.917] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:01.919] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:01.920] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:01.922] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:01.923] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:01.925] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:01.926] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:01.927] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:01.929] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:01.931] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:01.934] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:01.936] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:01.937] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:01.938] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:01.939] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:03.350] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:58:31.870] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:58:31.871] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:31.884] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:31.885] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:31.886] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:31.887] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:31.889] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:31.890] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:31.891] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:31.892] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:58:31.894] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:31.895] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:31.896] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:31.897] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:31.898] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:31.901] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:31.902] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:31.904] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:31.906] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:58:34.576] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T09:59:17.715] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:59:17.717] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:17.730] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:17.731] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:17.732] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:17.733] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:17.734] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:17.736] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:17.738] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:17.740] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:17.741] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:17.743] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:17.744] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:17.746] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:17.747] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:17.748] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:17.749] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:17.750] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:17.751] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:34.540] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T09:59:34.542] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:34.554] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:34.556] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:34.558] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:34.559] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:34.561] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:34.562] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:34.563] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:34.564] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T09:59:34.565] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:34.566] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:34.567] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:34.568] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:34.569] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:34.571] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:34.573] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:34.574] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T09:59:34.576] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:02.797] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:00:02.799] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:02.812] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:02.813] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:02.815] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:02.816] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:02.818] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:02.819] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:02.820] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:02.821] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:02.822] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:02.823] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:02.824] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:02.824] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:02.825] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:02.827] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:02.828] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:02.830] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:02.831] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:06.520] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T10:00:24.880] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:00:24.882] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:24.894] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:24.895] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:24.896] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:24.897] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:24.898] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:24.900] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:24.901] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:24.901] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:24.902] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:24.903] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:24.904] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:24.905] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:24.907] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:24.909] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:24.910] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:24.912] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:24.913] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:27.936] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T10:00:38.633] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:00:38.635] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:38.647] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:38.648] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:38.649] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:38.651] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:38.652] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:38.653] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:38.654] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:38.655] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:38.656] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:38.657] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:38.658] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:38.658] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:38.659] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:38.661] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:38.662] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:38.663] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:38.664] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:41.969] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T10:00:56.545] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:00:56.547] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:56.561] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:56.562] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:56.563] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:56.564] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:56.565] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:56.566] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:56.567] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:56.569] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:00:56.570] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:56.571] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:56.572] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:56.573] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:56.575] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:56.577] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:56.578] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:56.580] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:00:56.581] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:02.571] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T10:01:35.372] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:01:35.374] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:35.386] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:35.388] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:35.389] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:35.390] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:35.392] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:35.393] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:35.394] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:35.395] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:35.396] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:35.397] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:35.397] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:35.398] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:35.400] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:35.402] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:35.403] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:35.404] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:35.405] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:36.187] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T10:01:59.819] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:01:59.821] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:59.833] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:59.834] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:59.835] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:59.837] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:59.838] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:59.839] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:59.840] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:59.841] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:01:59.842] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:59.843] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:59.844] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:59.845] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:59.846] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:59.848] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:59.850] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:59.852] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:01:59.853] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:00.679] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T10:02:19.259] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:02:19.261] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:19.273] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:19.275] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:19.275] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:19.276] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:19.277] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:19.279] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:19.280] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:19.280] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:19.281] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:19.282] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:19.283] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:19.284] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:19.285] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:19.287] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:19.287] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:19.288] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:19.289] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:35.436] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:02:35.438] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:35.451] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:35.452] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:35.452] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:35.453] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:35.455] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:35.457] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:35.458] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:35.459] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:35.461] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:35.463] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:35.465] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:35.466] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:35.467] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:35.470] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:35.472] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:35.473] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:35.475] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:44.136] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:02:44.138] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:44.153] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:44.155] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:44.156] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:44.158] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:44.160] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:44.162] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:44.163] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:44.164] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:44.165] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:44.166] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:44.167] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:44.168] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:44.169] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:44.170] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:44.172] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:44.174] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:44.175] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:59.711] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:02:59.713] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:59.724] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:59.725] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:59.727] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:59.728] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:59.729] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:59.731] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:59.732] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:59.733] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:02:59.734] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:59.734] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:59.735] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:59.736] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:59.737] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:59.740] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:59.741] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:59.742] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:02:59.743] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:10.473] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:03:10.477] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:10.489] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:10.490] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:10.491] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:10.491] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:10.493] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:10.494] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:10.495] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:10.495] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:10.496] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:10.497] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:10.498] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:10.498] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:10.499] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:10.501] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:10.502] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:10.503] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:10.504] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:48.561] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:03:48.563] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:48.576] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:48.577] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:48.578] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:48.578] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:48.579] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:48.581] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:48.582] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:48.582] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:03:48.583] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:48.584] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:48.585] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:48.585] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:48.586] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:48.588] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:48.589] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:48.590] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:48.591] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:03:48.808] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T10:05:49.767] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T10:05:49.770] [INFO] db - [
  'Executing (110d7bb5-9be9-40bf-bf3a-43a5b784a61a): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '110d7bb5-9be9-40bf-bf3a-43a5b784a61a',
      connection: [Connection]
    }
  }
]
[2022-11-18T10:05:49.775] [INFO] db - [
  'Executing (110d7bb5-9be9-40bf-bf3a-43a5b784a61a): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '110d7bb5-9be9-40bf-bf3a-43a5b784a61a',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T10:05:49.787] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 10:05:49', '2022-11-18 10:05:49', 1 ]
  }
]
[2022-11-18T10:05:49.793] [INFO] db - [
  'Executing (110d7bb5-9be9-40bf-bf3a-43a5b784a61a): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '110d7bb5-9be9-40bf-bf3a-43a5b784a61a',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T10:05:49.812] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T10:05:50.044] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T10:06:55.746] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:06:55.748] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:06:55.761] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:06:55.762] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:06:55.762] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:06:55.763] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:06:55.764] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:06:55.766] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:06:55.767] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:06:55.768] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:06:55.769] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:06:55.769] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:06:55.770] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:06:55.771] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:06:55.772] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:06:55.774] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:06:55.774] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:06:55.775] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:06:55.776] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:07:06.191] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:07:06.193] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:07:06.206] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:07:06.207] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:07:06.209] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:07:06.210] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:07:06.212] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:07:06.214] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:07:06.215] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:07:06.216] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:07:06.217] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:07:06.218] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:07:06.218] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:07:06.219] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:07:06.221] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:07:06.222] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:07:06.223] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:07:06.224] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:07:06.226] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:07:07.672] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T10:59:45.069] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T10:59:45.071] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:59:45.084] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:59:45.085] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:59:45.086] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:59:45.086] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:59:45.088] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:59:45.090] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:59:45.092] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:59:45.093] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T10:59:45.095] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:59:45.097] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:59:45.098] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:59:45.100] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:59:45.101] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:59:45.104] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:59:45.106] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:59:45.108] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:59:45.110] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T10:59:45.372] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus->system_role_menu`.`id` AS `system_roles.system_menus.system_role_menu.id`, `system_roles->system_menus->system_role_menu`.`role_id` AS `system_roles.system_menus.system_role_menu.roleId`, `system_roles->system_menus->system_role_menu`.`menu_id` AS `system_roles.system_menus.system_role_menu.menuId`, `system_roles->system_menus->system_role_menu`.`create_time` AS `system_roles.system_menus.system_role_menu.createTime`, `system_roles->system_menus->system_role_menu`.`update_time` AS `system_roles.system_menus.system_role_menu.updateTime`, `system_roles->system_menus->system_role_menu`.`create_time` AS `system_roles.system_menus.system_role_menu.create_time`, `system_roles->system_menus->system_role_menu`.`update_time` AS `system_roles.system_menus.system_role_menu.update_time`, `system_roles->system_menus->system_role_menu`.`delete_time` AS `system_roles.system_menus.system_role_menu.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:00:17.345] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:00:17.346] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:00:17.360] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:00:17.362] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:00:17.363] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:00:17.363] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:00:17.365] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:00:17.366] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:00:17.367] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:00:17.368] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:00:17.368] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:00:17.369] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:00:17.370] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:00:17.371] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:00:17.372] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:00:17.374] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:00:17.375] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:00:17.375] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:00:17.376] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:00:28.127] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time`, `system_roles->system_menus->system_role_menu`.`id` AS `system_roles.system_menus.system_role_menu.id`, `system_roles->system_menus->system_role_menu`.`role_id` AS `system_roles.system_menus.system_role_menu.roleId`, `system_roles->system_menus->system_role_menu`.`menu_id` AS `system_roles.system_menus.system_role_menu.menuId`, `system_roles->system_menus->system_role_menu`.`create_time` AS `system_roles.system_menus.system_role_menu.createTime`, `system_roles->system_menus->system_role_menu`.`update_time` AS `system_roles.system_menus.system_role_menu.updateTime`, `system_roles->system_menus->system_role_menu`.`create_time` AS `system_roles.system_menus.system_role_menu.create_time`, `system_roles->system_menus->system_role_menu`.`update_time` AS `system_roles.system_menus.system_role_menu.update_time`, `system_roles->system_menus->system_role_menu`.`delete_time` AS `system_roles.system_menus.system_role_menu.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:02:03.044] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:02:03.046] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:03.058] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:03.059] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:03.061] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:03.062] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:03.063] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:03.065] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:03.066] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:03.066] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:03.067] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:03.068] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:03.069] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:03.069] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:03.070] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:03.072] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:03.073] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:03.074] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:03.076] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:05.754] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time`, `system_roles->system_menus->system_role_menu`.`id` AS `system_roles.system_menus.system_role_menu.id`, `system_roles->system_menus->system_role_menu`.`role_id` AS `system_roles.system_menus.system_role_menu.roleId`, `system_roles->system_menus->system_role_menu`.`menu_id` AS `system_roles.system_menus.system_role_menu.menuId`, `system_roles->system_menus->system_role_menu`.`create_time` AS `system_roles.system_menus.system_role_menu.createTime`, `system_roles->system_menus->system_role_menu`.`update_time` AS `system_roles.system_menus.system_role_menu.updateTime`, `system_roles->system_menus->system_role_menu`.`create_time` AS `system_roles.system_menus.system_role_menu.create_time`, `system_roles->system_menus->system_role_menu`.`update_time` AS `system_roles.system_menus.system_role_menu.update_time`, `system_roles->system_menus->system_role_menu`.`delete_time` AS `system_roles.system_menus.system_role_menu.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:02:45.016] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:02:45.019] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:45.032] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:45.033] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:45.033] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:45.035] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:45.036] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:45.037] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:45.038] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:45.039] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:02:45.040] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:45.040] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:45.042] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:45.044] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:45.045] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:45.047] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:45.049] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:45.050] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:45.051] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:02:47.177] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time`, `system_roles->system_menus->system_role_menu`.`id` AS `system_roles.system_menus.system_role_menu.id`, `system_roles->system_menus->system_role_menu`.`role_id` AS `system_roles.system_menus.system_role_menu.roleId`, `system_roles->system_menus->system_role_menu`.`menu_id` AS `system_roles.system_menus.system_role_menu.menuId`, `system_roles->system_menus->system_role_menu`.`create_time` AS `system_roles.system_menus.system_role_menu.createTime`, `system_roles->system_menus->system_role_menu`.`update_time` AS `system_roles.system_menus.system_role_menu.updateTime`, `system_roles->system_menus->system_role_menu`.`create_time` AS `system_roles.system_menus.system_role_menu.create_time`, `system_roles->system_menus->system_role_menu`.`update_time` AS `system_roles.system_menus.system_role_menu.update_time`, `system_roles->system_menus->system_role_menu`.`delete_time` AS `system_roles.system_menus.system_role_menu.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:04:57.466] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:04:57.468] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:04:57.483] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:04:57.485] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:04:57.485] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:04:57.486] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:04:57.487] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:04:57.488] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:04:57.489] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:04:57.490] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:04:57.491] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:04:57.491] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:04:57.492] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:04:57.493] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:04:57.494] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:04:57.497] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:04:57.498] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:04:57.499] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:04:57.500] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:04:59.689] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.id`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:08:35.380] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:08:35.382] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:08:35.394] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:08:35.395] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:08:35.397] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:08:35.398] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:08:35.399] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:08:35.401] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:08:35.402] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:08:35.402] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:08:35.403] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:08:35.405] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:08:35.405] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:08:35.406] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:08:35.407] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:08:35.409] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:08:35.410] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:08:35.414] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:08:35.415] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:08:46.711] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.id`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:09:18.258] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:09:18.260] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id`, `system_users`.`id` AS `system_users.userId`, `system_users`.`id` AS `system_users.id`, `system_users->system_user_role`.`id` AS `system_users.system_user_role.id`, `system_users->system_user_role`.`user_id` AS `system_users.system_user_role.userId`, `system_users->system_user_role`.`role_id` AS `system_users.system_user_role.roleId`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.createTime`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.updateTime`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.create_time`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.update_time`, `system_users->system_user_role`.`delete_time` AS `system_users.system_user_role.delete_time` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus',
      'system_users',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:09:18.262] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T11:09:24.654] [INFO] db - [
  'Executing (22527a88-f1e2-4a9b-ae9e-3ce779fc4a39): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '22527a88-f1e2-4a9b-ae9e-3ce779fc4a39',
      connection: [Connection]
    }
  }
]
[2022-11-18T11:09:24.659] [INFO] db - [
  'Executing (22527a88-f1e2-4a9b-ae9e-3ce779fc4a39): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`id` = 46);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '22527a88-f1e2-4a9b-ae9e-3ce779fc4a39',
      connection: [Connection]
    },
    where: '(`system_role`.`delete_time` IS NULL AND `system_role`.`id` = 46)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T11:09:24.667] [INFO] db - [
  'Executing (default): UPDATE `system_roles` SET `id`=?,`role_name`=?,`remark`=?,`create_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'update_time',
      'system_users',
      'menuIds'
    ],
    model: system_role,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [
      46,
      '管理员',
      '管理员',
      '2022-11-18 09:43:45',
      '2022-11-18 11:09:24',
      46
    ]
  }
]
[2022-11-18T11:09:24.674] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (1, 3, 11, 12, 13, 2, 195, 407, 294, 295, 296, 297, 333, 298, 536, 183));',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (1, 3, 11, 12, 13, 2, 195, 407, 294, 295, 296, 297, 333, 298, 536, 183))',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'menuId',      'menuName',
      'parentId',    'path',
      'component',   'perms',
      'type',        'orderNum',
      'icon',        'createTime',
      'updateTime',  'create_time',
      'update_time', 'delete_time'
    ],
    attributes: [
      [Array],       [Array],
      [Array],       'path',
      'component',   'perms',
      'type',        [Array],
      'icon',        [Array],
      [Array],       'create_time',
      'update_time', 'delete_time'
    ],
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T11:09:24.677] [INFO] db - [
  'Executing (22527a88-f1e2-4a9b-ae9e-3ce779fc4a39): SELECT `id`, `role_id` AS `roleId`, `menu_id` AS `menuId`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_role_menus` AS `system_role_menu` WHERE (`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 46);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '22527a88-f1e2-4a9b-ae9e-3ce779fc4a39',
      connection: [Connection]
    },
    where: '(`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 46)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      'id',
      [Array],
      [Array],
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_role_menus' ],
    type: 'SELECT',
    model: system_role_menu
  }
]
[2022-11-18T11:09:24.701] [INFO] db - [
  "Executing (22527a88-f1e2-4a9b-ae9e-3ce779fc4a39): INSERT INTO `system_role_menus` (`id`,`role_id`,`menu_id`,`create_time`,`update_time`) VALUES (NULL,46,3,'2022-11-18 11:09:24','2022-11-18 11:09:24'),(NULL,46,11,'2022-11-18 11:09:24','2022-11-18 11:09:24'),(NULL,46,12,'2022-11-18 11:09:24','2022-11-18 11:09:24'),(NULL,46,13,'2022-11-18 11:09:24','2022-11-18 11:09:24');",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    validate: true,
    hooks: true,
    individualHooks: false,
    ignoreDuplicates: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '22527a88-f1e2-4a9b-ae9e-3ce779fc4a39',
      connection: [Connection]
    },
    model: system_role_menu,
    returning: true,
    fields: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    type: 'INSERT'
  }
]
[2022-11-18T11:09:24.703] [INFO] db - [
  'Executing (22527a88-f1e2-4a9b-ae9e-3ce779fc4a39): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '22527a88-f1e2-4a9b-ae9e-3ce779fc4a39',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T11:09:24.748] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:09:24.749] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id`, `system_users`.`id` AS `system_users.userId`, `system_users`.`id` AS `system_users.id`, `system_users->system_user_role`.`id` AS `system_users.system_user_role.id`, `system_users->system_user_role`.`user_id` AS `system_users.system_user_role.userId`, `system_users->system_user_role`.`role_id` AS `system_users.system_user_role.roleId`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.createTime`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.updateTime`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.create_time`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.update_time`, `system_users->system_user_role`.`delete_time` AS `system_users.system_user_role.delete_time` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus',
      'system_users',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:09:27.002] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T11:09:29.826] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.id`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:10:45.463] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:10:45.465] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:10:45.478] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:10:45.479] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:10:45.480] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:10:45.480] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:10:45.482] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:10:45.483] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:10:45.485] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:10:45.486] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:10:45.487] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:10:45.487] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:10:45.488] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:10:45.489] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:10:45.490] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:10:45.491] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:10:45.493] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:10:45.493] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:10:45.495] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:10:48.796] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.id`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:11:56.495] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:11:56.497] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:11:56.512] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:11:56.513] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:11:56.514] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:11:56.515] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:11:56.517] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:11:56.518] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:11:56.519] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:11:56.520] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:11:56.521] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:11:56.522] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:11:56.523] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:11:56.523] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:11:56.524] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:11:56.526] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:11:56.527] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:11:56.528] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:11:56.530] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:11:56.748] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.id`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:12:10.388] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:12:10.391] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:10.403] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:10.404] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:10.405] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:10.406] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:10.407] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:10.409] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:10.411] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:10.413] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:10.414] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:10.416] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:10.418] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:10.419] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:10.421] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:10.423] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:10.426] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:10.428] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:10.429] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:25.963] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:12:25.964] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:25.978] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:25.979] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:25.980] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:25.981] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:25.982] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:25.984] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:25.984] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:25.987] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:12:25.989] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:25.991] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:25.993] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:25.994] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:25.995] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:25.997] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:25.998] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:25.999] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:26.000] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:12:26.589] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.id`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:12:41.949] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T11:12:45.713] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T11:12:45.716] [INFO] db - [
  'Executing (12b2da65-78fe-4a44-8775-261806c74acc): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '12b2da65-78fe-4a44-8775-261806c74acc',
      connection: [Connection]
    }
  }
]
[2022-11-18T11:12:45.721] [INFO] db - [
  'Executing (12b2da65-78fe-4a44-8775-261806c74acc): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '12b2da65-78fe-4a44-8775-261806c74acc',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T11:12:45.729] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 11:12:45', '2022-11-18 11:12:45', 1 ]
  }
]
[2022-11-18T11:12:45.738] [INFO] db - [
  'Executing (12b2da65-78fe-4a44-8775-261806c74acc): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '12b2da65-78fe-4a44-8775-261806c74acc',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T11:12:45.759] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.id`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:12:45.985] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T11:14:16.414] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:14:16.415] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:16.428] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:16.430] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:16.431] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:16.432] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:16.433] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:16.435] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:16.436] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:16.437] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:16.439] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:16.440] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:16.441] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:16.442] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:16.443] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:16.445] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:16.446] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:16.447] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:16.448] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:46.405] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:14:46.406] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:46.418] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:46.420] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:46.422] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:46.423] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:46.425] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:46.426] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:46.428] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:46.429] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:14:46.430] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:46.431] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:46.432] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:46.433] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:46.434] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:46.437] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:46.438] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:46.439] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:14:46.440] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:21:47.806] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:21:47.808] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:21:47.821] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:21:47.822] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:21:47.823] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:21:47.824] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:21:47.826] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:21:47.827] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:21:47.828] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:21:47.830] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:21:47.831] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:21:47.832] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:21:47.832] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:21:47.833] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:21:47.834] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:21:47.836] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:21:47.837] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:21:47.837] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:21:47.838] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:13.842] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:22:13.844] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:13.856] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:13.857] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:13.859] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:13.859] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:13.861] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:13.862] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:13.864] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:13.865] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:13.866] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:13.867] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:13.868] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:13.870] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:13.872] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:13.875] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:13.877] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:13.878] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:13.880] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:34.734] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:22:34.736] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:34.751] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:34.752] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:34.753] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:34.754] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:34.755] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:34.757] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:34.758] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:34.759] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:22:34.759] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:34.760] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:34.761] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:34.762] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:34.763] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:34.764] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:34.765] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:34.766] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:22:34.767] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:25.087] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:26:25.088] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:25.100] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:25.101] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:25.103] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:25.104] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:25.106] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:25.107] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:25.108] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:25.110] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:25.111] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:25.112] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:25.113] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:25.114] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:25.115] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:25.116] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:25.117] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:25.118] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:25.119] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:25.596] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:26:52.298] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:26:52.300] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:52.313] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:52.314] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:52.315] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:52.316] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:52.317] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:52.319] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:52.320] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:52.321] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:26:52.322] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:52.323] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:52.324] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:52.324] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:52.326] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:52.328] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:52.329] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:52.329] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:26:52.330] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:04.971] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:27:04.973] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:04.985] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:04.987] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:04.988] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:04.989] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:04.990] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:04.992] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:04.992] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:04.993] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:04.994] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:04.995] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:04.996] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:04.996] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:04.997] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:04.999] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:05.000] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:05.001] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:05.002] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:31.967] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:27:31.969] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:31.982] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:31.983] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:31.984] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:31.986] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:31.987] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:31.988] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:31.989] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:31.990] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:31.991] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:31.992] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:31.993] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:31.994] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:31.995] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:31.997] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:31.998] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:31.999] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:32.000] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:44.115] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:27:44.117] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:44.130] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:44.132] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:44.133] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:44.134] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:44.136] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:44.137] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:44.138] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:44.138] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:27:44.139] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:44.141] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:44.143] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:44.144] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:44.145] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:44.147] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:44.148] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:44.149] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:27:44.149] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:28:13.240] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:28:23.249] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:28:27.139] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:29:07.430] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:29:07.432] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:07.445] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:07.446] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:07.447] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:07.448] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:07.450] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:07.451] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:07.452] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:07.453] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:07.454] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:07.455] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:07.456] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:07.457] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:07.458] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:07.460] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:07.461] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:07.461] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:07.462] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:07.922] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:29:36.394] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:29:36.399] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:36.414] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:36.416] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:36.417] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:36.418] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:36.420] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:36.422] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:36.424] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:36.425] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:29:36.426] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:36.426] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:36.427] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:36.428] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:36.429] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:36.433] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:36.434] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:36.436] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:36.437] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:29:36.517] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:31:21.276] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:31:21.278] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:21.291] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:21.294] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:21.295] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:21.297] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:21.298] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:21.300] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:21.301] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:21.302] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:21.303] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:21.305] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:21.306] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:21.307] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:21.308] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:21.311] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:21.313] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:21.314] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:21.315] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:25.796] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:31:25.798] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:25.812] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:25.814] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:25.815] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:25.816] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:25.818] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:25.820] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:25.822] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:25.824] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:31:25.826] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:25.827] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:25.828] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:25.829] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:25.830] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:25.832] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:25.832] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:25.833] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:25.834] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:31:25.940] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:36:13.897] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:36:13.899] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:13.913] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:13.915] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:13.916] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:13.917] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:13.918] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:13.919] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:13.920] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:13.920] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:13.921] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:13.922] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:13.923] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:13.924] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:13.925] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:13.926] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:13.927] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:13.928] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:13.929] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:15.680] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:36:31.999] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:36:32.000] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:32.012] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:32.014] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:32.015] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:32.016] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:32.017] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:32.018] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:32.019] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:32.020] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:36:32.021] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:32.022] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:32.023] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:32.023] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:32.024] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:32.026] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:32.027] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:32.027] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:36:32.028] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:37:20.056] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:37:20.058] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:37:20.070] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:37:20.072] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:37:20.073] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:37:20.074] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:37:20.075] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:37:20.076] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:37:20.077] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:37:20.078] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:37:20.079] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:37:20.080] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:37:20.081] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:37:20.082] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:37:20.084] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:37:20.086] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:37:20.088] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:37:20.089] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:37:20.090] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:37:22.955] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T11:38:30.966] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T11:38:30.969] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:38:30.981] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:38:30.982] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:38:30.983] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:38:30.984] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:38:30.985] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:38:30.986] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:38:30.988] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:38:30.989] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T11:38:30.990] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:38:30.991] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:38:30.992] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:38:30.992] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:38:30.993] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:38:30.995] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:38:30.996] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:38:30.996] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T11:38:30.997] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:17:41.677] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T13:17:57.720] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:19:13.541] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T13:19:13.544] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T13:19:13.549] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:19:13.552] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:19:16.066] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:19:16.068] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id`, `system_users`.`id` AS `system_users.userId`, `system_users`.`id` AS `system_users.id`, `system_users->system_user_role`.`id` AS `system_users.system_user_role.id`, `system_users->system_user_role`.`user_id` AS `system_users.system_user_role.userId`, `system_users->system_user_role`.`role_id` AS `system_users.system_user_role.roleId`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.createTime`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.updateTime`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.create_time`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.update_time`, `system_users->system_user_role`.`delete_time` AS `system_users.system_user_role.delete_time` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus',
      'system_users',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:19:16.071] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T13:19:42.358] [INFO] db - [
  'Executing (1843ed71-3ac8-4bf5-baad-b3a7eb3db7ff): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '1843ed71-3ac8-4bf5-baad-b3a7eb3db7ff',
      connection: [Connection]
    }
  }
]
[2022-11-18T13:19:42.370] [INFO] db - [
  'Executing (1843ed71-3ac8-4bf5-baad-b3a7eb3db7ff): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`id` = 46);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '1843ed71-3ac8-4bf5-baad-b3a7eb3db7ff',
      connection: [Connection]
    },
    where: '(`system_role`.`delete_time` IS NULL AND `system_role`.`id` = 46)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T13:19:42.378] [INFO] db - [
  'Executing (default): UPDATE `system_roles` SET `id`=?,`role_name`=?,`remark`=?,`create_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'update_time',
      'system_users',
      'menuIds'
    ],
    model: system_role,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [
      46,
      '管理员',
      '管理员',
      '2022-11-18 09:43:45',
      '2022-11-18 13:19:42',
      46
    ]
  }
]
[2022-11-18T13:19:42.386] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (1, 3, 11, 12, 13, 130, 135, 2, 195, 407, 408, 294, 295, 296, 297, 333, 298, 536, 183, 184, 186, 187, 188, 189, 190, 191, 192, 185));',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (1, 3, 11, 12, 13, 130, 135, 2, 195, 407, 408, 294, 295, 296, 297, 333, 298, 536, 183, 184, 186, 187, 188, 189, 190, 191, 192, 185))',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'menuId',      'menuName',
      'parentId',    'path',
      'component',   'perms',
      'type',        'orderNum',
      'icon',        'createTime',
      'updateTime',  'create_time',
      'update_time', 'delete_time'
    ],
    attributes: [
      [Array],       [Array],
      [Array],       'path',
      'component',   'perms',
      'type',        [Array],
      'icon',        [Array],
      [Array],       'create_time',
      'update_time', 'delete_time'
    ],
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T13:19:42.390] [INFO] db - [
  'Executing (1843ed71-3ac8-4bf5-baad-b3a7eb3db7ff): SELECT `id`, `role_id` AS `roleId`, `menu_id` AS `menuId`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_role_menus` AS `system_role_menu` WHERE (`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 46);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '1843ed71-3ac8-4bf5-baad-b3a7eb3db7ff',
      connection: [Connection]
    },
    where: '(`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 46)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      'id',
      [Array],
      [Array],
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_role_menus' ],
    type: 'SELECT',
    model: system_role_menu
  }
]
[2022-11-18T13:19:42.413] [INFO] db - [
  "Executing (1843ed71-3ac8-4bf5-baad-b3a7eb3db7ff): INSERT INTO `system_role_menus` (`id`,`role_id`,`menu_id`,`create_time`,`update_time`) VALUES (NULL,46,130,'2022-11-18 13:19:42','2022-11-18 13:19:42'),(NULL,46,135,'2022-11-18 13:19:42','2022-11-18 13:19:42'),(NULL,46,184,'2022-11-18 13:19:42','2022-11-18 13:19:42'),(NULL,46,185,'2022-11-18 13:19:42','2022-11-18 13:19:42'),(NULL,46,186,'2022-11-18 13:19:42','2022-11-18 13:19:42'),(NULL,46,187,'2022-11-18 13:19:42','2022-11-18 13:19:42'),(NULL,46,188,'2022-11-18 13:19:42','2022-11-18 13:19:42'),(NULL,46,189,'2022-11-18 13:19:42','2022-11-18 13:19:42'),(NULL,46,190,'2022-11-18 13:19:42','2022-11-18 13:19:42'),(NULL,46,191,'2022-11-18 13:19:42','2022-11-18 13:19:42'),(NULL,46,192,'2022-11-18 13:19:42','2022-11-18 13:19:42'),(NULL,46,408,'2022-11-18 13:19:42','2022-11-18 13:19:42');",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    validate: true,
    hooks: true,
    individualHooks: false,
    ignoreDuplicates: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '1843ed71-3ac8-4bf5-baad-b3a7eb3db7ff',
      connection: [Connection]
    },
    model: system_role_menu,
    returning: true,
    fields: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    type: 'INSERT'
  }
]
[2022-11-18T13:19:42.415] [INFO] db - [
  'Executing (1843ed71-3ac8-4bf5-baad-b3a7eb3db7ff): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '1843ed71-3ac8-4bf5-baad-b3a7eb3db7ff',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T13:19:42.462] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:19:42.463] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id`, `system_users`.`id` AS `system_users.userId`, `system_users`.`id` AS `system_users.id`, `system_users->system_user_role`.`id` AS `system_users.system_user_role.id`, `system_users->system_user_role`.`user_id` AS `system_users.system_user_role.userId`, `system_users->system_user_role`.`role_id` AS `system_users.system_user_role.roleId`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.createTime`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.updateTime`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.create_time`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.update_time`, `system_users->system_user_role`.`delete_time` AS `system_users.system_user_role.delete_time` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus',
      'system_users',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:19:56.214] [INFO] db - [
  'Executing (583752ad-a1fd-431f-9575-e71a67fad893): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '583752ad-a1fd-431f-9575-e71a67fad893',
      connection: [Connection]
    }
  }
]
[2022-11-18T13:19:56.215] [INFO] db - [
  'Executing (583752ad-a1fd-431f-9575-e71a67fad893): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`id` = 47);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '583752ad-a1fd-431f-9575-e71a67fad893',
      connection: [Connection]
    },
    where: '(`system_role`.`delete_time` IS NULL AND `system_role`.`id` = 47)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T13:19:56.218] [INFO] db - [
  'Executing (default): UPDATE `system_roles` SET `id`=?,`role_name`=?,`remark`=?,`create_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'update_time',
      'system_users',
      'menuIds'
    ],
    model: system_role,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [
      47,
      '角色2',
      '角色2',
      '2022-11-18 09:44:01',
      '2022-11-18 13:19:56',
      47
    ]
  }
]
[2022-11-18T13:19:56.224] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (1, 3, 4, 14, 15, 16, 131, 5, 2, 195));',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (1, 3, 4, 14, 15, 16, 131, 5, 2, 195))',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'menuId',      'menuName',
      'parentId',    'path',
      'component',   'perms',
      'type',        'orderNum',
      'icon',        'createTime',
      'updateTime',  'create_time',
      'update_time', 'delete_time'
    ],
    attributes: [
      [Array],       [Array],
      [Array],       'path',
      'component',   'perms',
      'type',        [Array],
      'icon',        [Array],
      [Array],       'create_time',
      'update_time', 'delete_time'
    ],
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T13:19:56.226] [INFO] db - [
  'Executing (583752ad-a1fd-431f-9575-e71a67fad893): SELECT `id`, `role_id` AS `roleId`, `menu_id` AS `menuId`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_role_menus` AS `system_role_menu` WHERE (`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 47);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '583752ad-a1fd-431f-9575-e71a67fad893',
      connection: [Connection]
    },
    where: '(`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 47)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      'id',
      [Array],
      [Array],
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_role_menus' ],
    type: 'SELECT',
    model: system_role_menu
  }
]
[2022-11-18T13:19:56.230] [INFO] db - [
  "Executing (583752ad-a1fd-431f-9575-e71a67fad893): INSERT INTO `system_role_menus` (`id`,`role_id`,`menu_id`,`create_time`,`update_time`) VALUES (NULL,47,3,'2022-11-18 13:19:56','2022-11-18 13:19:56'),(NULL,47,4,'2022-11-18 13:19:56','2022-11-18 13:19:56'),(NULL,47,5,'2022-11-18 13:19:56','2022-11-18 13:19:56'),(NULL,47,14,'2022-11-18 13:19:56','2022-11-18 13:19:56'),(NULL,47,15,'2022-11-18 13:19:56','2022-11-18 13:19:56'),(NULL,47,16,'2022-11-18 13:19:56','2022-11-18 13:19:56'),(NULL,47,131,'2022-11-18 13:19:56','2022-11-18 13:19:56'),(NULL,47,195,'2022-11-18 13:19:56','2022-11-18 13:19:56');",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    validate: true,
    hooks: true,
    individualHooks: false,
    ignoreDuplicates: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '583752ad-a1fd-431f-9575-e71a67fad893',
      connection: [Connection]
    },
    model: system_role_menu,
    returning: true,
    fields: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    type: 'INSERT'
  }
]
[2022-11-18T13:19:56.233] [INFO] db - [
  'Executing (583752ad-a1fd-431f-9575-e71a67fad893): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '583752ad-a1fd-431f-9575-e71a67fad893',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T13:19:56.280] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:19:56.281] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id`, `system_users`.`id` AS `system_users.userId`, `system_users`.`id` AS `system_users.id`, `system_users->system_user_role`.`id` AS `system_users.system_user_role.id`, `system_users->system_user_role`.`user_id` AS `system_users.system_user_role.userId`, `system_users->system_user_role`.`role_id` AS `system_users.system_user_role.roleId`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.createTime`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.updateTime`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.create_time`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.update_time`, `system_users->system_user_role`.`delete_time` AS `system_users.system_user_role.delete_time` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus',
      'system_users',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:21:16.914] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:22:21.226] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:22:21.229] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:21.241] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:21.242] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:21.244] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:21.245] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:21.247] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:21.248] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:21.249] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:21.250] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:21.251] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:21.252] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:21.253] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:21.254] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:21.256] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:21.257] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:21.258] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:21.260] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:21.261] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:29.944] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:22:29.946] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:29.959] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:29.960] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:29.961] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:29.961] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:29.963] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:29.964] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:29.966] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:29.967] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:22:29.968] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:29.969] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:29.970] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:29.971] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:29.972] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:29.974] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:29.975] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:29.976] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:29.977] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:22:33.406] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:24:54.147] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:24:54.149] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:24:54.161] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:24:54.163] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:24:54.165] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:24:54.167] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:24:54.168] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:24:54.170] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:24:54.171] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:24:54.172] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:24:54.173] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:24:54.174] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:24:54.175] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:24:54.176] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:24:54.177] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:24:54.178] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:24:54.180] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:24:54.181] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:24:54.182] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:24:56.232] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:25:45.361] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:25:45.364] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:25:45.377] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:25:45.378] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:25:45.379] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:25:45.381] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:25:45.382] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:25:45.383] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:25:45.384] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:25:45.385] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:25:45.386] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:25:45.387] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:25:45.387] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:25:45.388] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:25:45.389] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:25:45.392] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:25:45.393] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:25:45.394] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:25:45.395] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:26:09.136] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:26:09.137] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:26:09.150] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:26:09.151] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:26:09.152] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:26:09.153] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:26:09.155] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:26:09.157] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:26:09.158] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:26:09.159] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:26:09.160] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:26:09.161] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:26:09.162] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:26:09.163] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:26:09.163] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:26:09.165] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:26:09.166] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:26:09.167] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:26:09.168] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:26:12.414] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:28:36.264] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:28:36.266] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id`, `system_users`.`id` AS `system_users.userId`, `system_users`.`id` AS `system_users.id`, `system_users->system_user_role`.`id` AS `system_users.system_user_role.id`, `system_users->system_user_role`.`user_id` AS `system_users.system_user_role.userId`, `system_users->system_user_role`.`role_id` AS `system_users.system_user_role.roleId`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.createTime`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.updateTime`, `system_users->system_user_role`.`create_time` AS `system_users.system_user_role.create_time`, `system_users->system_user_role`.`update_time` AS `system_users.system_user_role.update_time`, `system_users->system_user_role`.`delete_time` AS `system_users.system_user_role.delete_time` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_user_roles` AS `system_users->system_user_role` INNER JOIN `system_users` AS `system_users` ON `system_users`.`id` = `system_users->system_user_role`.`user_id` AND (`system_users->system_user_role`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_users->system_user_role`.`role_id` AND (`system_users`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object], [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus', 'system_users' ],
    includeMap: { system_menus: [Object], system_users: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus',
      'system_users',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:29:40.748] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:29:40.750] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:29:40.764] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:29:40.765] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:29:40.766] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:29:40.767] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:29:40.768] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:29:40.769] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:29:40.770] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:29:40.771] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:29:40.772] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:29:40.773] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:29:40.775] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:29:40.776] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:29:40.777] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:29:40.779] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:29:40.780] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:29:40.781] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:29:40.782] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:30:15.801] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T13:30:15.802] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T13:30:15.803] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:30:15.804] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:30:22.511] [INFO] db - [
  'Executing (b2b0473c-b127-4f61-8ee5-720e4505dbd5): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'b2b0473c-b127-4f61-8ee5-720e4505dbd5',
      connection: [Connection]
    }
  }
]
[2022-11-18T13:30:22.518] [INFO] db - [
  'Executing (b2b0473c-b127-4f61-8ee5-720e4505dbd5): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'b2b0473c-b127-4f61-8ee5-720e4505dbd5',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T13:30:22.527] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`user_name`=?,`real_name`=?,`gender`=?,`avatar`=?,`mobile`=?,`email`=?,`dept_id`=?,`org_id`=?,`status`=?,`description`=?,`last_login_time`=?,`create_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime',
      'update_time', 'roleIds'
    ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [
      1,                     'xunxiao',
      '荀潇1',               1,
      '',                    '17810204418',
      '123@123.com',         null,
      0,                     1,
      '',                    '2022-11-18 11:12:45',
      '2022-11-09 13:50:16', '2022-11-18 13:30:22',
      1
    ]
  }
]
[2022-11-18T13:30:22.534] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`id` IN (46));',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`system_role`.`delete_time` IS NULL AND `system_role`.`id` IN (46))',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      [Array],
      [Array],
      'remark',
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T13:30:22.537] [INFO] db - [
  'Executing (b2b0473c-b127-4f61-8ee5-720e4505dbd5): SELECT `id`, `user_id` AS `userId`, `role_id` AS `roleId`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_user_roles` AS `system_user_role` WHERE (`system_user_role`.`delete_time` IS NULL AND `system_user_role`.`user_id` = 1);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'b2b0473c-b127-4f61-8ee5-720e4505dbd5',
      connection: [Connection]
    },
    where: '(`system_user_role`.`delete_time` IS NULL AND `system_user_role`.`user_id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'id',
      'userId',
      'roleId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      'id',
      [Array],
      [Array],
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_user_roles' ],
    type: 'SELECT',
    model: system_user_role
  }
]
[2022-11-18T13:30:22.559] [INFO] db - [
  'Executing (b2b0473c-b127-4f61-8ee5-720e4505dbd5): DELETE FROM `system_user_roles` WHERE `user_id` = 1 AND `role_id` IN (47, 48)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'b2b0473c-b127-4f61-8ee5-720e4505dbd5',
      connection: [Connection]
    },
    where: { user_id: 1, role_id: [Array] },
    hooks: true,
    individualHooks: false,
    cascade: false,
    restartIdentity: false,
    type: 'BULKDELETE',
    model: system_user_role,
    limit: null
  }
]
[2022-11-18T13:30:22.561] [INFO] db - [
  'Executing (b2b0473c-b127-4f61-8ee5-720e4505dbd5): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'b2b0473c-b127-4f61-8ee5-720e4505dbd5',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T13:30:22.613] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:30:22.614] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:30:26.225] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:30:26.226] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:30:33.312] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T13:30:33.314] [INFO] db - [
  'Executing (124c2c52-efe2-427b-8c25-261c07bf5272): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '124c2c52-efe2-427b-8c25-261c07bf5272',
      connection: [Connection]
    }
  }
]
[2022-11-18T13:30:33.315] [INFO] db - [
  'Executing (124c2c52-efe2-427b-8c25-261c07bf5272): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '124c2c52-efe2-427b-8c25-261c07bf5272',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T13:30:33.319] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 13:30:33', '2022-11-18 13:30:33', 1 ]
  }
]
[2022-11-18T13:30:33.330] [INFO] db - [
  'Executing (124c2c52-efe2-427b-8c25-261c07bf5272): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '124c2c52-efe2-427b-8c25-261c07bf5272',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T13:30:33.352] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:30:33.604] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T13:31:14.658] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:32:08.785] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:32:08.787] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:32:08.807] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:32:08.808] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:32:08.809] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:32:08.812] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:32:08.815] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:32:08.817] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:32:08.818] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:32:08.820] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:32:08.821] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:32:08.822] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:32:08.824] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:32:08.824] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:32:08.826] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:32:08.828] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:32:08.829] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:32:08.830] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:32:08.831] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:32:11.822] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:33:01.446] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:33:01.449] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:33:01.462] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:33:01.463] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:33:01.465] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:33:01.466] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:33:01.467] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:33:01.468] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:33:01.469] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:33:01.470] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:33:01.471] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:33:01.472] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:33:01.473] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:33:01.474] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:33:01.475] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:33:01.477] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:33:01.479] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:33:01.480] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:33:01.481] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:33:05.818] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:35:53.739] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:35:53.741] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:35:53.755] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:35:53.757] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:35:53.757] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:35:53.758] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:35:53.759] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:35:53.761] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:35:53.763] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:35:53.764] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:35:53.765] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:35:53.766] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:35:53.767] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:35:53.768] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:35:53.769] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:35:53.770] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:35:53.771] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:35:53.772] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:35:53.773] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:35:57.647] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:36:09.914] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:36:09.916] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:09.929] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:09.930] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:09.932] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:09.933] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:09.935] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:09.938] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:09.939] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:09.940] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:09.941] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:09.943] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:09.944] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:09.945] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:09.947] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:09.950] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:09.951] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:09.952] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:09.953] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:48.332] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:36:48.335] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:48.348] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:48.349] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:48.350] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:48.352] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:48.353] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:48.355] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:48.356] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:48.358] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:36:48.361] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:48.362] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:48.363] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:48.364] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:48.365] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:48.367] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:48.369] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:48.370] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:48.377] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:36:55.654] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:37:44.105] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:37:44.107] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:37:44.119] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:37:44.121] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:37:44.122] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:37:44.123] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:37:44.125] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:37:44.126] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:37:44.127] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:37:44.129] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:37:44.130] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:37:44.131] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:37:44.132] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:37:44.133] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:37:44.135] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:37:44.137] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:37:44.139] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:37:44.140] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:37:44.141] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:38:05.139] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T13:38:05.143] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T13:38:05.152] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:38:05.154] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:38:12.195] [INFO] db - [
  'Executing (1f807040-941a-420a-acaf-61abb6c8aec9): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '1f807040-941a-420a-acaf-61abb6c8aec9',
      connection: [Connection]
    }
  }
]
[2022-11-18T13:38:12.201] [INFO] db - [
  'Executing (1f807040-941a-420a-acaf-61abb6c8aec9): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '1f807040-941a-420a-acaf-61abb6c8aec9',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T13:38:12.210] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`user_name`=?,`real_name`=?,`gender`=?,`avatar`=?,`mobile`=?,`email`=?,`dept_id`=?,`org_id`=?,`status`=?,`description`=?,`last_login_time`=?,`create_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime',
      'update_time', 'roleIds'
    ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [
      1,                     'xunxiao',
      '荀潇1',               1,
      '',                    '17810204418',
      '123@123.com',         null,
      0,                     1,
      '',                    '2022-11-18 13:30:33',
      '2022-11-09 13:50:16', '2022-11-18 13:38:12',
      1
    ]
  }
]
[2022-11-18T13:38:12.220] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`id` IN (46, 47, 48));',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`system_role`.`delete_time` IS NULL AND `system_role`.`id` IN (46, 47, 48))',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      [Array],
      [Array],
      'remark',
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T13:38:12.223] [INFO] db - [
  'Executing (1f807040-941a-420a-acaf-61abb6c8aec9): SELECT `id`, `user_id` AS `userId`, `role_id` AS `roleId`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_user_roles` AS `system_user_role` WHERE (`system_user_role`.`delete_time` IS NULL AND `system_user_role`.`user_id` = 1);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '1f807040-941a-420a-acaf-61abb6c8aec9',
      connection: [Connection]
    },
    where: '(`system_user_role`.`delete_time` IS NULL AND `system_user_role`.`user_id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'id',
      'userId',
      'roleId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      'id',
      [Array],
      [Array],
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_user_roles' ],
    type: 'SELECT',
    model: system_user_role
  }
]
[2022-11-18T13:38:12.251] [INFO] db - [
  "Executing (1f807040-941a-420a-acaf-61abb6c8aec9): INSERT INTO `system_user_roles` (`id`,`user_id`,`role_id`,`create_time`,`update_time`) VALUES (NULL,1,47,'2022-11-18 13:38:12','2022-11-18 13:38:12'),(NULL,1,48,'2022-11-18 13:38:12','2022-11-18 13:38:12');",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    validate: true,
    hooks: true,
    individualHooks: false,
    ignoreDuplicates: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '1f807040-941a-420a-acaf-61abb6c8aec9',
      connection: [Connection]
    },
    model: system_user_role,
    returning: true,
    fields: [
      'id',
      'userId',
      'roleId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    type: 'INSERT'
  }
]
[2022-11-18T13:38:12.253] [INFO] db - [
  'Executing (1f807040-941a-420a-acaf-61abb6c8aec9): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '1f807040-941a-420a-acaf-61abb6c8aec9',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T13:38:12.307] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:38:12.308] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:38:13.537] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:38:13.538] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:38:15.102] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T13:38:18.835] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:38:45.681] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:38:45.683] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:38:45.697] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:38:45.699] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:38:45.700] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:38:45.701] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:38:45.703] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:38:45.704] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:38:45.706] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:38:45.707] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:38:45.708] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:38:45.709] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:38:45.710] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:38:45.712] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:38:45.713] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:38:45.715] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:38:45.716] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:38:45.717] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:38:45.718] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:18.634] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:39:18.636] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:18.649] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:18.650] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:18.651] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:18.651] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:18.653] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:18.654] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:18.656] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:18.656] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:18.657] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:18.659] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:18.660] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:18.662] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:18.663] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:18.666] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:18.667] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:18.668] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:18.670] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:24.512] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:39:56.888] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:39:56.890] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:56.901] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:56.903] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:56.905] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:56.905] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:56.907] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:56.908] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:56.909] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:56.910] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:39:56.911] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:56.912] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:56.913] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:56.914] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:56.915] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:56.918] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:56.919] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:56.920] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:39:56.921] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:40:19.904] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:40:19.907] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:40:19.919] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:40:19.921] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:40:19.921] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:40:19.922] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:40:19.924] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:40:19.925] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:40:19.926] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:40:19.927] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:40:19.929] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:40:19.930] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:40:19.932] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:40:19.934] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:40:19.935] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:40:19.937] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:40:19.939] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:40:19.940] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:40:19.941] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:40:24.132] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:41:38.191] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:41:38.193] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:38.205] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:38.206] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:38.208] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:38.210] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:38.211] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:38.213] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:38.214] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:38.215] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:38.216] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:38.217] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:38.218] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:38.219] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:38.220] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:38.222] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:38.223] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:38.224] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:38.226] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:40.976] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:41:56.720] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:41:56.722] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:56.735] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:56.736] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:56.736] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:56.737] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:56.739] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:56.741] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:56.742] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:56.744] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:41:56.745] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:56.746] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:56.747] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:56.747] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:56.748] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:56.750] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:56.751] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:56.752] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:56.753] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:41:58.936] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:42:59.202] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:42:59.205] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:42:59.219] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:42:59.220] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:42:59.222] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:42:59.223] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:42:59.224] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:42:59.225] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:42:59.228] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:42:59.229] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:42:59.230] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:42:59.232] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:42:59.233] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:42:59.234] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:42:59.235] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:42:59.236] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:42:59.237] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:42:59.238] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:42:59.239] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:43:00.279] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:43:02.763] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:43:30.484] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:43:30.486] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:43:30.500] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:43:30.500] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:43:30.501] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:43:30.502] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:43:30.503] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:43:30.504] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:43:30.505] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:43:30.506] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:43:30.507] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:43:30.508] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:43:30.509] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:43:30.509] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:43:30.510] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:43:30.512] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:43:30.513] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:43:30.513] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:43:30.514] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:05.594] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:44:05.597] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:05.615] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:05.616] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:05.616] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:05.618] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:05.620] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:05.621] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:05.622] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:05.624] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:05.626] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.create_time`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.update_time`, `system_roles->system_menus`.`delete_time` AS `system_roles.system_menus.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:44:05.629] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:05.630] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:05.632] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:05.633] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:05.638] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:05.647] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:05.649] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:05.650] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:05.651] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:29.554] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:44:29.555] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:29.568] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:29.571] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:29.572] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:29.574] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:29.576] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:29.578] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:29.579] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:29.581] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:29.582] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:29.584] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:29.587] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:29.590] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:29.591] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:29.593] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:29.594] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:29.595] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:29.596] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:29.731] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:44:30.926] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:44:31.705] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:44:40.734] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:44:40.737] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:40.767] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:40.774] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:40.776] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:40.778] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:40.781] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:40.783] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:40.787] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:40.789] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:44:40.791] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:40.792] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:40.794] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:40.795] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:40.798] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:40.803] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:40.806] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:40.809] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:40.810] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:44:42.157] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`type` AS `system_roles.system_menus.type`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus`.`create_time` AS `system_roles.system_menus.createTime`, `system_roles->system_menus`.`update_time` AS `system_roles.system_menus.updateTime` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:46:00.597] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:46:00.599] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:00.612] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:00.613] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:00.614] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:00.615] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:00.617] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:00.619] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:00.620] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:00.622] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:00.624] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:00.627] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:00.630] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:00.631] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:00.633] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:00.637] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:00.640] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:00.643] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:00.645] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:00.829] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:46:16.966] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:46:16.968] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:16.982] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:16.984] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:16.985] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:16.985] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:16.986] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:16.987] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:16.988] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:16.990] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:16.991] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:16.993] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:16.994] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:16.995] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:16.996] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:16.998] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:16.999] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:17.000] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:17.001] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:17.270] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon`, `system_roles->system_menus->system_role_menu`.`id` AS `system_roles.system_menus.system_role_menu.id`, `system_roles->system_menus->system_role_menu`.`role_id` AS `system_roles.system_menus.system_role_menu.roleId`, `system_roles->system_menus->system_role_menu`.`menu_id` AS `system_roles.system_menus.system_role_menu.menuId`, `system_roles->system_menus->system_role_menu`.`create_time` AS `system_roles.system_menus.system_role_menu.createTime`, `system_roles->system_menus->system_role_menu`.`update_time` AS `system_roles.system_menus.system_role_menu.updateTime`, `system_roles->system_menus->system_role_menu`.`create_time` AS `system_roles.system_menus.system_role_menu.create_time`, `system_roles->system_menus->system_role_menu`.`update_time` AS `system_roles.system_menus.system_role_menu.update_time`, `system_roles->system_menus->system_role_menu`.`delete_time` AS `system_roles.system_menus.system_role_menu.delete_time` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:46:27.730] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:46:27.731] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:27.743] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:27.745] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:27.746] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:27.747] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:27.748] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:27.749] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:27.750] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:27.751] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:46:27.752] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:27.752] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:27.753] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:27.754] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:27.755] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:27.756] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:27.757] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:27.758] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:27.759] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:46:58.098] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:47:57.444] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:47:57.446] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:47:57.458] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:47:57.459] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:47:57.461] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:47:57.462] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:47:57.463] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:47:57.465] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:47:57.466] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:47:57.467] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:47:57.468] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:47:57.469] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:47:57.471] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:47:57.472] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:47:57.473] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:47:57.475] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:47:57.476] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:47:57.477] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:47:57.478] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:08.301] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:48:08.303] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:08.315] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:08.316] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:08.318] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:08.318] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:08.320] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:08.321] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:08.322] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:08.322] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:08.323] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:08.324] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:08.325] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:08.326] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:08.327] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:08.329] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:08.330] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:08.331] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:08.333] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:19.601] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:48:19.603] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:19.615] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:19.616] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:19.618] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:19.619] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:19.620] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:19.621] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:19.622] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:19.623] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:48:19.624] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:19.625] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:19.626] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:19.626] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:19.628] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:19.630] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:19.631] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:19.632] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:19.634] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:48:22.922] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:49:27.012] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:49:27.014] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:27.030] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:27.031] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:27.032] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:27.032] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:27.034] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:27.035] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:27.036] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:27.037] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:27.038] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:27.039] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:27.040] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:27.041] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:27.042] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:27.043] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:27.044] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:27.045] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:27.046] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:31.594] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:49:31.596] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:31.609] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:31.610] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:31.611] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:31.612] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:31.613] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:31.614] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:31.616] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:31.617] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:31.619] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:31.620] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:31.621] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:31.622] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:31.623] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:31.624] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:31.625] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:31.626] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:31.627] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:43.102] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:49:43.103] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:43.115] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:43.116] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:43.117] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:43.118] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:43.120] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:43.121] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:43.122] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:43.123] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:49:43.124] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:43.125] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:43.126] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:43.127] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:43.129] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:43.132] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:43.133] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:43.134] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:43.135] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:49:58.723] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:50:12.855] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:50:12.856] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:12.868] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:12.870] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:12.871] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:12.872] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:12.873] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:12.874] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:12.875] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:12.876] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:12.877] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:12.878] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:12.878] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:12.879] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:12.880] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:12.882] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:12.882] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:12.883] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:12.884] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:30.376] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:50:30.378] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:30.391] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:30.392] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:30.392] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:30.393] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:30.395] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:30.397] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:30.398] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:30.399] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:50:30.400] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:30.401] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:30.404] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:30.405] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:30.406] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:30.408] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:30.409] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:30.410] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:30.410] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:50:33.539] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:50:37.638] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:54:05.226] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:54:05.227] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:54:05.239] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:54:05.240] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:54:05.243] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:54:05.244] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:54:05.246] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:54:05.247] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:54:05.248] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:54:05.249] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:54:05.250] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:54:05.251] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:54:05.252] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:54:05.253] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:54:05.254] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:54:05.255] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:54:05.256] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:54:05.257] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:54:05.258] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:54:06.761] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:55:28.773] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:55:28.775] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:55:28.788] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:55:28.790] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:55:28.791] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:55:28.792] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:55:28.793] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:55:28.795] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:55:28.796] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:55:28.798] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:55:28.801] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:55:28.803] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:55:28.804] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:55:28.806] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:55:28.808] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:55:28.811] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:55:28.812] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:55:28.814] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:55:28.816] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:55:29.891] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:56:19.010] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:56:19.011] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:19.024] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:19.025] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:19.027] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:19.027] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:19.029] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:19.030] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:19.031] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:19.032] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:19.033] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:19.035] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:19.036] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:19.037] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:19.038] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:19.040] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:19.041] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:19.042] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:19.043] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:19.850] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:56:52.584] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:56:52.586] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:52.598] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:52.600] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:52.601] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:52.602] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:52.603] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:52.604] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:52.605] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:52.606] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:56:52.607] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:52.607] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:52.608] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:52.609] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:52.610] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:52.612] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:52.613] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:52.614] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:56:52.615] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:06.792] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:57:06.794] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:06.807] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:06.808] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:06.809] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:06.810] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:06.811] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:06.813] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:06.814] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:06.815] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:06.816] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:06.817] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:06.820] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:06.821] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:06.821] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:06.823] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:06.824] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:06.825] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:06.826] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:19.510] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:57:19.512] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:19.524] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:19.526] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:19.528] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:19.529] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:19.530] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:19.532] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:19.533] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:19.534] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:19.535] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:19.536] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:19.536] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:19.537] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:19.538] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:19.540] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:19.541] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:19.542] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:19.543] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:48.785] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:57:48.787] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:48.799] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:48.801] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:48.802] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:48.803] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:48.805] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:48.806] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:48.808] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:48.809] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:57:48.810] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:48.811] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:48.812] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:48.813] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:48.814] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:48.816] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:48.817] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:48.818] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:57:48.819] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:04.636] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:58:04.637] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:04.650] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:04.653] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:04.653] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:04.655] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:04.656] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:04.657] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:04.658] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:04.659] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:04.660] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:04.660] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:04.661] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:04.662] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:04.663] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:04.665] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:04.666] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:04.667] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:04.668] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:26.404] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:58:26.406] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:26.419] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:26.420] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:26.421] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:26.422] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:26.424] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:26.425] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:26.426] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:26.427] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:26.429] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:26.430] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:26.431] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:26.432] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:26.433] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:26.435] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:26.436] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:26.437] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:26.438] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:47.364] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:58:47.367] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:47.382] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:47.383] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:47.384] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:47.385] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:47.387] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:47.388] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:47.390] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:47.392] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:47.393] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:47.395] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:47.397] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:47.398] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:47.400] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:47.402] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:47.403] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:47.405] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:47.407] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:53.434] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:58:53.436] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:53.449] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:53.450] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:53.452] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:53.453] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:53.455] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:53.457] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:53.458] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:53.460] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:53.462] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:53.463] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:53.464] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:53.465] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:53.466] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:53.467] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:53.468] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:53.469] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:53.470] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:59.101] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:58:59.103] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:59.117] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:59.118] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:59.120] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:59.121] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:59.122] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:59.123] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:59.124] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:59.125] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:58:59.126] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:59.127] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:59.128] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:59.129] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:59.131] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:59.134] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:59.136] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:59.138] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:58:59.140] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:59:10.934] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T13:59:10.936] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:59:10.948] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:59:10.950] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:59:10.951] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:59:10.952] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:59:10.954] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:59:10.956] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:59:10.957] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:59:10.958] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T13:59:10.960] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:59:10.962] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:59:10.964] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:59:10.966] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:59:10.967] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:59:10.970] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:59:10.972] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:59:10.973] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:59:10.975] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T13:59:20.895] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:59:23.070] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T13:59:53.717] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:00:04.168] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:00:13.959] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:00:30.911] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:00:33.016] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:00:43.236] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:00:46.654] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:00:49.136] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:00:52.952] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:00:54.955] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:01:03.112] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:02:32.252] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:02:40.419] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T14:02:40.427] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:02:40.432] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:02:40.437] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:03:17.550] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T14:03:17.551] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:03:17.553] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:03:17.553] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:23:40.081] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:24:13.524] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:31:13.575] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T14:31:13.578] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:31:13.579] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:31:13.582] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:31:15.295] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T14:31:15.303] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:31:15.307] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:31:15.309] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:31:27.434] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T14:31:27.436] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:31:27.440] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:31:27.442] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:37:33.191] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T14:37:33.193] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:37:33.196] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:37:33.200] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:40:00.797] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T14:40:00.799] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:40:00.801] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:40:00.803] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:41:03.463] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T14:41:03.464] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:41:03.464] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:41:03.465] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:43:22.628] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T14:43:22.630] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:43:22.631] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:43:22.633] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:43:27.246] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:43:27.249] [INFO] db - [
  'Executing (d70ac472-2fb4-449a-a603-d6622d15b9f4): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'd70ac472-2fb4-449a-a603-d6622d15b9f4',
      connection: [Connection]
    }
  }
]
[2022-11-18T14:43:27.267] [INFO] db - [
  'Executing (d70ac472-2fb4-449a-a603-d6622d15b9f4): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'd70ac472-2fb4-449a-a603-d6622d15b9f4',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:43:27.275] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 14:43:27', '2022-11-18 14:43:27', 1 ]
  }
]
[2022-11-18T14:43:27.282] [INFO] db - [
  'Executing (d70ac472-2fb4-449a-a603-d6622d15b9f4): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'd70ac472-2fb4-449a-a603-d6622d15b9f4',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T14:43:27.299] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:43:27.580] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:43:31.028] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:43:31.030] [INFO] db - [
  'Executing (a197a9bf-939a-4f25-879e-ee721114aa0d): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'a197a9bf-939a-4f25-879e-ee721114aa0d',
      connection: [Connection]
    }
  }
]
[2022-11-18T14:43:31.032] [INFO] db - [
  'Executing (a197a9bf-939a-4f25-879e-ee721114aa0d): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'a197a9bf-939a-4f25-879e-ee721114aa0d',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:43:31.036] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 14:43:31', '2022-11-18 14:43:31', 1 ]
  }
]
[2022-11-18T14:43:31.040] [INFO] db - [
  'Executing (a197a9bf-939a-4f25-879e-ee721114aa0d): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'a197a9bf-939a-4f25-879e-ee721114aa0d',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T14:43:31.053] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:43:31.215] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:43:57.855] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:43:58.350] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:44:10.812] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:44:32.001] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:44:32.003] [INFO] db - [
  'Executing (115a4aff-97a6-499a-ab87-16f0f7d244ee): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '115a4aff-97a6-499a-ab87-16f0f7d244ee',
      connection: [Connection]
    }
  }
]
[2022-11-18T14:44:32.006] [INFO] db - [
  'Executing (115a4aff-97a6-499a-ab87-16f0f7d244ee): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '115a4aff-97a6-499a-ab87-16f0f7d244ee',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:44:32.014] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 14:44:32', '2022-11-18 14:44:32', 1 ]
  }
]
[2022-11-18T14:44:32.021] [INFO] db - [
  'Executing (115a4aff-97a6-499a-ab87-16f0f7d244ee): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '115a4aff-97a6-499a-ab87-16f0f7d244ee',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T14:44:32.038] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:44:32.174] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:44:52.604] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:45:05.624] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:45:37.559] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T14:45:37.560] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:45:37.563] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:45:37.567] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:50:27.092] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T14:50:27.094] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:50:27.095] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:50:27.096] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:50:28.446] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T14:50:28.449] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:50:28.452] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:50:28.454] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:10.806] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus' ],
    includeMap: { system_menus: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:10.808] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus' ],
    includeMap: { system_menus: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:10.809] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:51:19.452] [INFO] db - [
  'Executing (0fb79cd6-d5a6-4185-8848-723a5c83978e): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '0fb79cd6-d5a6-4185-8848-723a5c83978e',
      connection: [Connection]
    }
  }
]
[2022-11-18T14:51:19.454] [INFO] db - [
  'Executing (0fb79cd6-d5a6-4185-8848-723a5c83978e): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`id` = 46);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '0fb79cd6-d5a6-4185-8848-723a5c83978e',
      connection: [Connection]
    },
    where: '(`system_role`.`delete_time` IS NULL AND `system_role`.`id` = 46)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:51:19.457] [INFO] db - [
  'Executing (default): UPDATE `system_roles` SET `id`=?,`role_name`=?,`remark`=?,`create_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'update_time',
      'menuIds'
    ],
    model: system_role,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [
      46,
      '管理员',
      '管理员',
      '2022-11-18 09:43:45',
      '2022-11-18 14:51:19',
      46
    ]
  }
]
[2022-11-18T14:51:19.463] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (1, 3, 11, 12, 13, 130, 135, 408, 184, 186, 187, 188, 189, 190, 191, 192, 185));',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (1, 3, 11, 12, 13, 130, 135, 408, 184, 186, 187, 188, 189, 190, 191, 192, 185))',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'menuId',      'menuName',
      'parentId',    'path',
      'component',   'perms',
      'type',        'orderNum',
      'icon',        'createTime',
      'updateTime',  'create_time',
      'update_time', 'delete_time'
    ],
    attributes: [
      [Array],       [Array],
      [Array],       'path',
      'component',   'perms',
      'type',        [Array],
      'icon',        [Array],
      [Array],       'create_time',
      'update_time', 'delete_time'
    ],
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:51:19.466] [INFO] db - [
  'Executing (0fb79cd6-d5a6-4185-8848-723a5c83978e): SELECT `id`, `role_id` AS `roleId`, `menu_id` AS `menuId`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_role_menus` AS `system_role_menu` WHERE (`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 46);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '0fb79cd6-d5a6-4185-8848-723a5c83978e',
      connection: [Connection]
    },
    where: '(`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 46)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      'id',
      [Array],
      [Array],
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_role_menus' ],
    type: 'SELECT',
    model: system_role_menu
  }
]
[2022-11-18T14:51:19.616] [INFO] db - [
  'Executing (0fb79cd6-d5a6-4185-8848-723a5c83978e): DELETE FROM `system_role_menus` WHERE `role_id` = 46 AND `menu_id` IN (2, 183, 195, 294, 295, 296, 297, 298, 333, 407, 536)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '0fb79cd6-d5a6-4185-8848-723a5c83978e',
      connection: [Connection]
    },
    where: { role_id: 46, menu_id: [Array] },
    hooks: true,
    individualHooks: false,
    cascade: false,
    restartIdentity: false,
    type: 'BULKDELETE',
    model: system_role_menu,
    limit: null
  }
]
[2022-11-18T14:51:19.618] [INFO] db - [
  'Executing (0fb79cd6-d5a6-4185-8848-723a5c83978e): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '0fb79cd6-d5a6-4185-8848-723a5c83978e',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T14:51:19.648] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus' ],
    includeMap: { system_menus: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:19.649] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus' ],
    includeMap: { system_menus: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:22.464] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:51:22.466] [INFO] db - [
  'Executing (56dc1e57-6214-4d3f-9c93-09dfd82deac1): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '56dc1e57-6214-4d3f-9c93-09dfd82deac1',
      connection: [Connection]
    }
  }
]
[2022-11-18T14:51:22.467] [INFO] db - [
  'Executing (56dc1e57-6214-4d3f-9c93-09dfd82deac1): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '56dc1e57-6214-4d3f-9c93-09dfd82deac1',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:51:22.471] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 14:51:22', '2022-11-18 14:51:22', 1 ]
  }
]
[2022-11-18T14:51:22.476] [INFO] db - [
  'Executing (56dc1e57-6214-4d3f-9c93-09dfd82deac1): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '56dc1e57-6214-4d3f-9c93-09dfd82deac1',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T14:51:22.491] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:22.690] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:51:27.092] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:51:27.105] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus' ],
    includeMap: { system_menus: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:27.106] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus' ],
    includeMap: { system_menus: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:36.490] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:51:36.492] [INFO] db - [
  'Executing (078c6706-736e-4b8d-b8d5-1e5f434d7a51): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '078c6706-736e-4b8d-b8d5-1e5f434d7a51',
      connection: [Connection]
    }
  }
]
[2022-11-18T14:51:36.494] [INFO] db - [
  'Executing (078c6706-736e-4b8d-b8d5-1e5f434d7a51): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '078c6706-736e-4b8d-b8d5-1e5f434d7a51',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:51:36.496] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 14:51:36', '2022-11-18 14:51:36', 1 ]
  }
]
[2022-11-18T14:51:36.504] [INFO] db - [
  'Executing (078c6706-736e-4b8d-b8d5-1e5f434d7a51): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '078c6706-736e-4b8d-b8d5-1e5f434d7a51',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T14:51:36.522] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:36.530] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:36.791] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:51:45.789] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus' ],
    includeMap: { system_menus: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:45.790] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus' ],
    includeMap: { system_menus: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:45.792] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:51:51.723] [INFO] db - [
  'Executing (ace23e06-f1bc-4d63-b9cb-e41f2d079b31): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'ace23e06-f1bc-4d63-b9cb-e41f2d079b31',
      connection: [Connection]
    }
  }
]
[2022-11-18T14:51:51.725] [INFO] db - [
  'Executing (ace23e06-f1bc-4d63-b9cb-e41f2d079b31): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`id` = 47);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'ace23e06-f1bc-4d63-b9cb-e41f2d079b31',
      connection: [Connection]
    },
    where: '(`system_role`.`delete_time` IS NULL AND `system_role`.`id` = 47)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:51:51.728] [INFO] db - [
  'Executing (default): UPDATE `system_roles` SET `id`=?,`role_name`=?,`remark`=?,`create_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'update_time',
      'menuIds'
    ],
    model: system_role,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [
      47,
      '角色2',
      '角色2',
      '2022-11-18 09:44:01',
      '2022-11-18 14:51:51',
      47
    ]
  }
]
[2022-11-18T14:51:51.735] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (3, 4, 14, 15, 16, 131, 5));',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (3, 4, 14, 15, 16, 131, 5))',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'menuId',      'menuName',
      'parentId',    'path',
      'component',   'perms',
      'type',        'orderNum',
      'icon',        'createTime',
      'updateTime',  'create_time',
      'update_time', 'delete_time'
    ],
    attributes: [
      [Array],       [Array],
      [Array],       'path',
      'component',   'perms',
      'type',        [Array],
      'icon',        [Array],
      [Array],       'create_time',
      'update_time', 'delete_time'
    ],
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:51:51.738] [INFO] db - [
  'Executing (ace23e06-f1bc-4d63-b9cb-e41f2d079b31): SELECT `id`, `role_id` AS `roleId`, `menu_id` AS `menuId`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_role_menus` AS `system_role_menu` WHERE (`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 47);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'ace23e06-f1bc-4d63-b9cb-e41f2d079b31',
      connection: [Connection]
    },
    where: '(`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 47)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      'id',
      [Array],
      [Array],
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_role_menus' ],
    type: 'SELECT',
    model: system_role_menu
  }
]
[2022-11-18T14:51:51.739] [INFO] db - [
  'Executing (ace23e06-f1bc-4d63-b9cb-e41f2d079b31): DELETE FROM `system_role_menus` WHERE `role_id` = 47 AND `menu_id` IN (1, 2, 195)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'ace23e06-f1bc-4d63-b9cb-e41f2d079b31',
      connection: [Connection]
    },
    where: { role_id: 47, menu_id: [Array] },
    hooks: true,
    individualHooks: false,
    cascade: false,
    restartIdentity: false,
    type: 'BULKDELETE',
    model: system_role_menu,
    limit: null
  }
]
[2022-11-18T14:51:51.740] [INFO] db - [
  'Executing (ace23e06-f1bc-4d63-b9cb-e41f2d079b31): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'ace23e06-f1bc-4d63-b9cb-e41f2d079b31',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T14:51:51.769] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus' ],
    includeMap: { system_menus: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:51.771] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus' ],
    includeMap: { system_menus: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:58.120] [INFO] db - [
  'Executing (86d3e2f6-ffd0-43c4-ad5d-ccf6e5f0493e): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '86d3e2f6-ffd0-43c4-ad5d-ccf6e5f0493e',
      connection: [Connection]
    }
  }
]
[2022-11-18T14:51:58.122] [INFO] db - [
  'Executing (86d3e2f6-ffd0-43c4-ad5d-ccf6e5f0493e): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`id` = 48);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '86d3e2f6-ffd0-43c4-ad5d-ccf6e5f0493e',
      connection: [Connection]
    },
    where: '(`system_role`.`delete_time` IS NULL AND `system_role`.`id` = 48)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:51:58.124] [INFO] db - [
  'Executing (default): UPDATE `system_roles` SET `id`=?,`role_name`=?,`remark`=?,`create_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [
      'roleId',
      'roleName',
      'remark',
      'createTime',
      'updateTime',
      'update_time',
      'menuIds'
    ],
    model: system_role,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [
      48,
      '角色3',
      '角色3',
      '2022-11-18 09:44:11',
      '2022-11-18 14:51:58',
      48
    ]
  }
]
[2022-11-18T14:51:58.132] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (2));',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: '(`system_menu`.`delete_time` IS NULL AND `system_menu`.`id` IN (2))',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'menuId',      'menuName',
      'parentId',    'path',
      'component',   'perms',
      'type',        'orderNum',
      'icon',        'createTime',
      'updateTime',  'create_time',
      'update_time', 'delete_time'
    ],
    attributes: [
      [Array],       [Array],
      [Array],       'path',
      'component',   'perms',
      'type',        [Array],
      'icon',        [Array],
      [Array],       'create_time',
      'update_time', 'delete_time'
    ],
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:51:58.134] [INFO] db - [
  'Executing (86d3e2f6-ffd0-43c4-ad5d-ccf6e5f0493e): SELECT `id`, `role_id` AS `roleId`, `menu_id` AS `menuId`, `create_time` AS `createTime`, `update_time` AS `updateTime`, `create_time`, `update_time`, `delete_time` FROM `system_role_menus` AS `system_role_menu` WHERE (`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 48);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '86d3e2f6-ffd0-43c4-ad5d-ccf6e5f0493e',
      connection: [Connection]
    },
    where: '(`system_role_menu`.`delete_time` IS NULL AND `system_role_menu`.`role_id` = 48)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    attributes: [
      'id',
      [Array],
      [Array],
      [Array],
      [Array],
      'create_time',
      'update_time',
      'delete_time'
    ],
    tableNames: [ 'system_role_menus' ],
    type: 'SELECT',
    model: system_role_menu
  }
]
[2022-11-18T14:51:58.136] [INFO] db - [
  'Executing (86d3e2f6-ffd0-43c4-ad5d-ccf6e5f0493e): DELETE FROM `system_role_menus` WHERE `role_id` = 48 AND `menu_id` IN (298, 536)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '86d3e2f6-ffd0-43c4-ad5d-ccf6e5f0493e',
      connection: [Connection]
    },
    where: { role_id: 48, menu_id: [Array] },
    hooks: true,
    individualHooks: false,
    cascade: false,
    restartIdentity: false,
    type: 'BULKDELETE',
    model: system_role_menu,
    limit: null
  }
]
[2022-11-18T14:51:58.138] [INFO] db - [
  "Executing (86d3e2f6-ffd0-43c4-ad5d-ccf6e5f0493e): INSERT INTO `system_role_menus` (`id`,`role_id`,`menu_id`,`create_time`,`update_time`) VALUES (NULL,48,2,'2022-11-18 14:51:58','2022-11-18 14:51:58');",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    validate: true,
    hooks: true,
    individualHooks: false,
    ignoreDuplicates: false,
    force: true,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '86d3e2f6-ffd0-43c4-ad5d-ccf6e5f0493e',
      connection: [Connection]
    },
    model: system_role_menu,
    returning: true,
    fields: [
      'id',
      'roleId',
      'menuId',
      'createTime',
      'updateTime',
      'create_time',
      'update_time',
      'delete_time'
    ],
    type: 'INSERT'
  }
]
[2022-11-18T14:51:58.140] [INFO] db - [
  'Executing (86d3e2f6-ffd0-43c4-ad5d-ccf6e5f0493e): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '86d3e2f6-ffd0-43c4-ad5d-ccf6e5f0493e',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T14:51:58.178] [INFO] db - [
  "Executing (default): SELECT count(`system_role`.`id`) AS `count` FROM `system_roles` AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`id` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL) WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%');",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: null,
    offset: null,
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    attributes: [ [Array] ],
    model: system_role,
    includeNames: [ 'system_menus' ],
    includeMap: { system_menus: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:51:58.182] [INFO] db - [
  "Executing (default): SELECT `system_role`.*, `system_menus`.`id` AS `system_menus.menuId`, `system_menus`.`id` AS `system_menus.id` FROM (SELECT `system_role`.`id` AS `roleId`, `system_role`.`role_name` AS `roleName`, `system_role`.`remark`, `system_role`.`create_time` AS `createTime`, `system_role`.`update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%') LIMIT 0, 10) AS `system_role` LEFT OUTER JOIN ( `system_role_menus` AS `system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_menus` ON `system_menus`.`id` = `system_menus->system_role_menu`.`menu_id` AND (`system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_role`.`roleId` = `system_menus->system_role_menu`.`role_id` AND (`system_menus`.`delete_time` IS NULL);",
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    where: "(`system_role`.`delete_time` IS NULL AND `system_role`.`role_name` LIKE '%%')",
    limit: 10,
    offset: 0,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    hasJoin: true,
    model: system_role,
    includeNames: [ 'system_menus' ],
    includeMap: { system_menus: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_role,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    tableNames: [
      'system_roles',
      'system_menus',
      'undefined',
      'system_role_menus'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:52:03.316] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:52:03.318] [INFO] db - [
  'Executing (a44b8998-5112-4dd1-a5ee-024ef1cd927e): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'a44b8998-5112-4dd1-a5ee-024ef1cd927e',
      connection: [Connection]
    }
  }
]
[2022-11-18T14:52:03.319] [INFO] db - [
  'Executing (a44b8998-5112-4dd1-a5ee-024ef1cd927e): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'a44b8998-5112-4dd1-a5ee-024ef1cd927e',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:52:03.320] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 14:52:03', '2022-11-18 14:52:03', 1 ]
  }
]
[2022-11-18T14:52:03.326] [INFO] db - [
  'Executing (a44b8998-5112-4dd1-a5ee-024ef1cd927e): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: 'a44b8998-5112-4dd1-a5ee-024ef1cd927e',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T14:52:03.344] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:52:03.352] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:52:03.608] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:53:01.611] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:53:01.612] [INFO] db - [
  'Executing (88576f0a-bed7-4d7b-89be-7682367bea89): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '88576f0a-bed7-4d7b-89be-7682367bea89',
      connection: [Connection]
    }
  }
]
[2022-11-18T14:53:01.613] [INFO] db - [
  'Executing (88576f0a-bed7-4d7b-89be-7682367bea89): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '88576f0a-bed7-4d7b-89be-7682367bea89',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:53:01.618] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 14:53:01', '2022-11-18 14:53:01', 1 ]
  }
]
[2022-11-18T14:53:01.624] [INFO] db - [
  'Executing (88576f0a-bed7-4d7b-89be-7682367bea89): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '88576f0a-bed7-4d7b-89be-7682367bea89',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T14:53:01.640] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:53:01.651] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:53:01.903] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:54:12.439] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T14:54:12.441] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:54:12.479] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:54:12.480] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:54:12.482] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:54:12.483] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:54:12.484] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:54:12.485] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:54:12.486] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:54:12.487] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:54:12.488] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:54:12.489] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:54:12.489] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:54:12.490] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:54:12.491] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:54:12.493] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:54:12.494] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:54:12.495] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:54:12.496] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:55:14.884] [INFO] db - [
  "Executing (default): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao')) LIMIT 1;",
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    where: "(`system_user`.`delete_time` IS NULL AND (`system_user`.`password` = 'e10adc3949ba59abbe56e057f20f883e' AND `system_user`.`user_name` = 'xunxiao'))",
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    limit: 1,
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:55:14.888] [INFO] db - [
  'Executing (3fc8d3b4-8611-419e-a132-8c466303d3d3): START TRANSACTION;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '3fc8d3b4-8611-419e-a132-8c466303d3d3',
      connection: [Connection]
    }
  }
]
[2022-11-18T14:55:14.899] [INFO] db - [
  'Executing (3fc8d3b4-8611-419e-a132-8c466303d3d3): SELECT `id` AS `userId`, `user_name` AS `userName`, `real_name` AS `realName`, `password`, `gender`, `avatar`, `mobile`, `email`, `dept_id` AS `deptId`, `org_id` AS `orgId`, `status`, `description`, `last_login_time` AS `lastLoginTime`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '3fc8d3b4-8611-419e-a132-8c466303d3d3',
      connection: [Connection]
    },
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],  [Array],
      [Array],  'password',
      'gender', 'avatar',
      'mobile', 'email',
      [Array],  [Array],
      'status', 'description',
      [Array],  [Array],
      [Array]
    ],
    originalAttributes: [
      'userId',        'userName',
      'realName',      'password',
      'gender',        'avatar',
      'mobile',        'email',
      'deptId',        'orgId',
      'status',        'description',
      'lastLoginTime', 'createTime',
      'updateTime'
    ],
    tableNames: [ 'system_users' ],
    type: 'SELECT',
    model: system_user
  }
]
[2022-11-18T14:55:14.911] [INFO] db - [
  'Executing (default): UPDATE `system_users` SET `id`=?,`last_login_time`=?,`update_time`=? WHERE (`delete_time` IS NULL AND `id` = ?)',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    where: { [Symbol(and)]: [Array] },
    validate: true,
    hooks: true,
    individualHooks: false,
    returning: false,
    force: false,
    sideEffects: true,
    type: 'BULKUPDATE',
    fields: [ 'userId', 'lastLoginTime', 'update_time' ],
    model: system_user,
    skip: undefined,
    hasTrigger: undefined,
    dialect: 'mysql',
    dialectModule: null,
    dialectModulePath: null,
    host: 'localhost',
    protocol: 'tcp',
    define: {
      charset: 'utf8',
      dialectOptions: [Object],
      timestamps: true,
      paranoid: true,
      createdAt: 'create_time',
      updatedAt: 'update_time',
      deletedAt: 'delete_time',
      underscored: true,
      scopes: [Object]
    },
    query: {},
    sync: {},
    timezone: '+08:00',
    standardConformingStrings: true,
    omitNull: false,
    native: false,
    replication: false,
    ssl: undefined,
    pool: { max: 5, min: 0, idle: 30000 },
    quoteIdentifiers: true,
    retry: { max: 5, match: [Array] },
    transactionType: 'DEFERRED',
    isolationLevel: null,
    databaseVersion: '8.0.29',
    typeValidation: false,
    benchmark: false,
    minifyAliases: false,
    logQueryParameters: false,
    operatorAliases: false,
    dialectOptions: { dateStrings: true, typeCast: true },
    models: [
      'D:\\Job\\YHKJ\\me\\code\\node-koa2-mysql-server\\,model\\**\\*.js'
    ],
    allowNull: [],
    bind: [ 1, '2022-11-18 14:55:14', '2022-11-18 14:55:14', 1 ]
  }
]
[2022-11-18T14:55:14.919] [INFO] db - [
  'Executing (3fc8d3b4-8611-419e-a132-8c466303d3d3): COMMIT;',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'DEFERRED',
    isolationLevel: null,
    readOnly: false,
    transaction: Transaction {
      sequelize: [Sequelize],
      savepoints: [],
      _afterCommitHooks: [],
      options: [Object],
      parent: undefined,
      name: undefined,
      id: '3fc8d3b4-8611-419e-a132-8c466303d3d3',
      connection: [Connection],
      finished: 'commit'
    },
    supportsSearchPath: false,
    completesTransaction: true
  }
]
[2022-11-18T14:55:14.945] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:55:14.957] [INFO] db - [
  'Executing (default): SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime`, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName`, `system_roles->system_menus`.`id` AS `system_roles.system_menus.menuId`, `system_roles->system_menus`.`menu_name` AS `system_roles.system_menus.menuName`, `system_roles->system_menus`.`parent_id` AS `system_roles.system_menus.parentId`, `system_roles->system_menus`.`path` AS `system_roles.system_menus.path`, `system_roles->system_menus`.`component` AS `system_roles.system_menus.component`, `system_roles->system_menus`.`perms` AS `system_roles.system_menus.perms`, `system_roles->system_menus`.`order_num` AS `system_roles.system_menus.orderNum`, `system_roles->system_menus`.`icon` AS `system_roles.system_menus.icon` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) LEFT OUTER JOIN ( `system_role_menus` AS `system_roles->system_menus->system_role_menu` INNER JOIN `system_menus` AS `system_roles->system_menus` ON `system_roles->system_menus`.`id` = `system_roles->system_menus->system_role_menu`.`menu_id` AND (`system_roles->system_menus->system_role_menu`.`delete_time` IS NULL)) ON `system_roles`.`id` = `system_roles->system_menus->system_role_menu`.`role_id` AND (`system_roles->system_menus`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1);',
  {
    plain: true,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    where: '(`system_user`.`delete_time` IS NULL AND `system_user`.`id` = 1)',
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: undefined,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_menus',
      'system_role_menus',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:55:15.405] [INFO] db - [
  'Executing (default): SELECT `id` AS `menuId`, `menu_name` AS `menuName`, `parent_id` AS `parentId`, `path`, `component`, `perms`, `type`, `order_num` AS `orderNum`, `icon`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_menus` AS `system_menu` WHERE (`system_menu`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [
      [Array],     [Array],
      [Array],     'path',
      'component', 'perms',
      'type',      [Array],
      'icon',      [Array],
      [Array]
    ],
    originalAttributes: [
      'menuId',     'menuName',
      'parentId',   'path',
      'component',  'perms',
      'type',       'orderNum',
      'icon',       'createTime',
      'updateTime'
    ],
    where: '(`system_menu`.`delete_time` IS NULL)',
    tableNames: [ 'system_menus' ],
    type: 'SELECT',
    model: system_menu
  }
]
[2022-11-18T14:55:29.572] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T14:55:29.578] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:55:29.581] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:55:29.585] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T14:56:01.888] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:56:01.890] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:57:15.708] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T14:57:15.710] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:15.723] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:15.724] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:15.725] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:15.725] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:15.727] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:15.728] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:15.729] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:15.730] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:15.730] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:15.731] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:15.732] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:15.733] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:15.734] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:15.735] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:15.736] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:15.737] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:15.738] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:17.721] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:57:17.722] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:57:48.759] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T14:57:48.761] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:48.774] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:48.775] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:48.776] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:48.776] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:48.778] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:48.780] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:48.781] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:48.781] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T14:57:48.787] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:48.788] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:48.789] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:48.791] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:48.792] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:48.794] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:48.796] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:48.797] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:48.801] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T14:57:48.816] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T14:57:48.817] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T15:02:48.443] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T15:02:48.445] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T15:02:48.856] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T15:02:48.857] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T15:02:49.309] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T15:02:49.310] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T16:29:59.051] [INFO] db - [
  'Executing (default): SELECT 1+1 AS result',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    type: 'SELECT'
  }
]
[2022-11-18T16:29:59.053] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_users' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T16:29:59.068] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T16:29:59.069] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T16:29:59.070] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_depts' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T16:29:59.072] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_user_roles' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T16:29:59.074] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'system_role_menus' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T16:29:59.076] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T16:29:59.077] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T16:29:59.079] [INFO] db - [
  "Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'postTag' AND TABLE_SCHEMA = 'koa-mysql'",
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWTABLES'
  }
]
[2022-11-18T16:29:59.080] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_users`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_users', singular: 'system_user' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T16:29:59.081] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_roles', singular: 'system_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T16:29:59.082] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_menus', singular: 'system_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T16:29:59.083] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_depts`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_depts', singular: 'system_dept' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T16:29:59.084] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_user_roles`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_user_roles', singular: 'system_user_role' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '用户角色表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T16:29:59.085] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `system_role_menus`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: false,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'system_role_menus', singular: 'system_role_menu' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    comment: '角色菜单关联表',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T16:29:59.087] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `post`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'posts', singular: 'post' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T16:29:59.087] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `tag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'tags', singular: 'tag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T16:29:59.089] [INFO] db - [
  'Executing (default): SHOW INDEX FROM `postTag`',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    timestamps: true,
    validate: {},
    freezeTableName: true,
    underscored: true,
    paranoid: true,
    rejectOnEmpty: false,
    whereCollection: null,
    schema: null,
    schemaDelimiter: '',
    defaultScope: {},
    scopes: { hiddenAttr: [Object] },
    indexes: [],
    whereMergeStrategy: 'overwrite',
    name: { plural: 'postTags', singular: 'postTag' },
    omitNull: false,
    charset: 'utf8',
    dialectOptions: { collate: 'utf8_general_ci' },
    createdAt: 'create_time',
    updatedAt: 'update_time',
    deletedAt: 'delete_time',
    sequelize: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [MySQLQueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager]
    },
    hooks: true,
    type: 'SHOWINDEXES'
  }
]
[2022-11-18T17:31:44.357] [INFO] db - [
  'Executing (default): SELECT `id` AS `deptId`, `dept_name` AS `deptName`, `parent_id` AS `parentId`, `order_num` AS `orderNum`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_depts` AS `system_dept` WHERE (`system_dept`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], [Array], [Array], [Array], [Array] ],
    originalAttributes: [
      'deptId',
      'deptName',
      'parentId',
      'orderNum',
      'createTime',
      'updateTime'
    ],
    where: '(`system_dept`.`delete_time` IS NULL)',
    tableNames: [ 'system_depts' ],
    type: 'SELECT',
    model: system_dept
  }
]
[2022-11-18T17:31:44.363] [INFO] db - [
  'Executing (default): SELECT `id` AS `roleId`, `role_name` AS `roleName`, `remark`, `create_time` AS `createTime`, `update_time` AS `updateTime` FROM `system_roles` AS `system_role` WHERE (`system_role`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    hooks: true,
    rejectOnEmpty: false,
    attributes: [ [Array], [Array], 'remark', [Array], [Array] ],
    originalAttributes: [ 'roleId', 'roleName', 'remark', 'createTime', 'updateTime' ],
    where: '(`system_role`.`delete_time` IS NULL)',
    tableNames: [ 'system_roles' ],
    type: 'SELECT',
    model: system_role
  }
]
[2022-11-18T17:31:44.365] [INFO] db - [
  'Executing (default): SELECT count(`system_user`.`id`) AS `count` FROM `system_users` AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`id` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL) WHERE (`system_user`.`delete_time` IS NULL);',
  {
    plain: true,
    raw: true,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: null,
    offset: null,
    attributes: [ [Array] ],
    hooks: true,
    dataType: INTEGER {
      options: {},
      _length: undefined,
      _zerofill: undefined,
      _decimals: undefined,
      _precision: undefined,
      _scale: undefined,
      _unsigned: undefined
    },
    includeIgnoreAttributes: false,
    order: null,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: null,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    subQuery: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    type: 'SELECT',
    keysEscaped: true
  }
]
[2022-11-18T17:31:44.366] [INFO] db - [
  'Executing (default): SELECT `system_user`.*, `system_roles`.`id` AS `system_roles.roleId`, `system_roles`.`id` AS `system_roles.id`, `system_roles`.`role_name` AS `system_roles.roleName` FROM (SELECT `system_user`.`id` AS `userId`, `system_user`.`user_name` AS `userName`, `system_user`.`real_name` AS `realName`, `system_user`.`gender`, `system_user`.`avatar`, `system_user`.`mobile`, `system_user`.`email`, `system_user`.`dept_id` AS `deptId`, `system_user`.`org_id` AS `orgId`, `system_user`.`status`, `system_user`.`description`, `system_user`.`last_login_time` AS `lastLoginTime`, `system_user`.`create_time` AS `createTime`, `system_user`.`update_time` AS `updateTime` FROM `system_users` AS `system_user` WHERE (`system_user`.`delete_time` IS NULL) LIMIT 0, 10) AS `system_user` LEFT OUTER JOIN ( `system_user_roles` AS `system_roles->system_user_role` INNER JOIN `system_roles` AS `system_roles` ON `system_roles`.`id` = `system_roles->system_user_role`.`role_id` AND (`system_roles->system_user_role`.`delete_time` IS NULL)) ON `system_user`.`userId` = `system_roles->system_user_role`.`user_id` AND (`system_roles`.`delete_time` IS NULL);',
  {
    plain: false,
    raw: false,
    logging: [Function: logging],
    showWarnings: false,
    include: [ [Object] ],
    limit: 10,
    offset: 0,
    attributes: [
      [Array],       [Array],
      [Array],       'gender',
      'avatar',      'mobile',
      'email',       [Array],
      [Array],       'status',
      'description', [Array],
      [Array],       [Array]
    ],
    hooks: true,
    rejectOnEmpty: false,
    originalAttributes: [
      'userId',      'userName',
      'realName',    'gender',
      'avatar',      'mobile',
      'email',       'deptId',
      'orgId',       'status',
      'description', 'lastLoginTime',
      'createTime',  'updateTime'
    ],
    hasJoin: true,
    model: system_user,
    includeNames: [ 'system_roles' ],
    includeMap: { system_roles: [Object] },
    hasSingleAssociation: true,
    hasMultiAssociation: true,
    topModel: system_user,
    topLimit: 10,
    hasDuplicating: true,
    hasRequired: false,
    hasWhere: false,
    subQuery: true,
    hasIncludeWhere: false,
    hasIncludeRequired: false,
    where: '(`system_user`.`delete_time` IS NULL)',
    tableNames: [
      'system_users',
      'system_roles',
      'undefined',
      'system_user_roles'
    ],
    type: 'SELECT',
    keysEscaped: true
  }
]
